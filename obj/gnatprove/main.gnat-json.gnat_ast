(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type integer  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = integer,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type integer__ref  = { mutable integer__content : integer }
  
  function   integer__ref_integer__content__projection (a : integer__ref)
    requires {  } ensures  {  } returns integer = a.integer__content
  
  meta model_projection function integer__ref_integer__content__projection
  
  meta inline:no function integer__ref_integer__content__projection
  
  function   integer__havoc (x : integer__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_18) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_14) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_15) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_16) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_17) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_14) = True) \/
          (Standard__integer.first <= Standard__integer.last))
       then
       (Standard__integer.dynamic_property Standard__integer.first
          Standard__integer.last ([mlw:proxy_symbol]
          [introduced] temp___expr_18))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_19) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_20) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type natural  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = natural,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type natural__ref  = { mutable natural__content : natural }
  
  function   natural__ref_natural__content__projection (a : natural__ref)
    requires {  } ensures  {  } returns natural = a.natural__content
  
  meta model_projection function natural__ref_natural__content__projection
  
  meta inline:no function natural__ref_natural__content__projection
  
  function   natural__havoc (x : natural__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__natural
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_46) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_42) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_43) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_44) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_45) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_42) = True) \/
          (Standard__natural.first <= Standard__natural.last))
       then
       (Standard__natural.dynamic_property Standard__natural.first
          Standard__natural.last ([mlw:proxy_symbol]
          [introduced] temp___expr_46))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_47) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_48) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
  
  use        Standard__natural
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__natural.natural) requires { True }
    ensures  { True } returns int = (Standard__natural.natural'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__natural.natural,
    predicate in_range = Standard__natural.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type positive  = <range 1 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = positive,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type positive__ref  = { mutable positive__content : positive }
  
  function   positive__ref_positive__content__projection (a : positive__ref)
    requires {  } ensures  {  } returns positive = a.positive__content
  
  meta model_projection function positive__ref_positive__content__projection
  
  meta inline:no function positive__ref_positive__content__projection
  
  function   positive__havoc (x : positive__ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
  
  use        Standard__positive
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__positive.positive) requires { True }
    ensures  { True } returns int = (Standard__positive.positive'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__positive.positive,
    predicate in_range = Standard__positive.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type character  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 255
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = character,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type character__ref  = { mutable character__content : character }
  
  function   character__ref_character__content__projection
    (a : character__ref) requires {  } ensures  {  } returns
    character = a.character__content
  
  meta model_projection function character__ref_character__content__projection
  
  meta inline:no function character__ref_character__content__projection
  
  function   character__havoc (x : character__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
  
  use        Standard__character
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
  
  use        Standard__integer
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__integer.integer) requires { True }
    ensures  { True } returns int = (Standard__integer.integer'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__positive
  use        Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer__rep
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = <=
  
  type string__  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type string____ref  = { mutable string____content : string__ }
  
  function   string____ref_string____content__projection (a : string____ref)
    requires {  } ensures  {  } returns string__ = a.string____content
  
  meta model_projection function string____ref_string____content__projection
  
  meta inline:no function string____ref_string____content__projection
  
  function   string____havoc (x : string____ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__positive
  use        Standard__string
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_103) : Standard__string.string__
    ([mlw:proxy_symbol] [introduced] temp___is_init_99) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_101) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_102) : bool) requires
    { True } ensures  { True } returns
     = (if ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) then
       True  else
       (Standard__string.dynamic_property Standard__positive.first
          Standard__positive.last
          (Standard__string.first ([mlw:proxy_symbol]
             [introduced] temp___expr_103))
          (Standard__string.last ([mlw:proxy_symbol]
             [introduced] temp___expr_103))))

end

(* Module for axiomatizing the record theory associated to type "database" defined at variablestore.ads:15, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Variablestore__database__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  type __rep  
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns bool

end

(* Module for axiomatizing type "database" defined at variablestore.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Variablestore__database
  
  use export Variablestore__database__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type database  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   user_eq (a : database b : database) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns database
  
  type database__ref  = { mutable database__content : database }
  
  function   database__ref_database__content__projection (a : database__ref)
    requires {  } ensures  {  } returns database = a.database__content
  
  meta model_projection function database__ref_database__content__projection
  
  meta inline:no function database__ref_database__content__projection
  
  function   database__havoc (x : database__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for defining a ref holding the value of variable "db" defined at main.adb:20, created in Gnat2Why.Decls.Translate_Variable *)
module Main__db
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__database
  
  val db  [sloc:main.adb:20]: Variablestore__database.database

end

(* Module for axiomatizing type "T13s" defined at mystring.ads:38 instantiated at variablestore.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Variablestore__variables__mystring__T13s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type t13s  = <range 0 1024>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 1024
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = t13s,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type t13s__ref  = { mutable t13s__content : t13s }
  
  function   t13s__ref_t13s__content__projection (a : t13s__ref) requires
    {  } ensures  {  } returns t13s = a.t13s__content
  
  meta model_projection function t13s__ref_t13s__content__projection
  
  meta inline:no function t13s__ref_t13s__content__projection
  
  function   t13s__havoc (x : t13s__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "T13s" defined at mystring.ads:38 instantiated at variablestore.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Variablestore__variables__mystring__T13s__rep
  
  use        Variablestore__variables__mystring__T13s
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Variablestore__variables__mystring__T13s.t13s)
    requires { True } ensures  { True } returns
    int = (Variablestore__variables__mystring__T13s.t13s'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Variablestore__variables__mystring__T13s.t13s,
    predicate in_range = Variablestore__variables__mystring__T13s.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "mystringstr" defined at mystring.ads:36 instantiated at variablestore.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Variablestore__variables__mystringstr
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Array__Int__Standard__character
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 1024
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "mystring" defined at mystring.ads:37 instantiated at variablestore.ads:11, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Variablestore__variables__mystring__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__variables__mystring__T13s
  use        Variablestore__variables__mystring__T13s__rep
  use        Variablestore__variables__mystringstr
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  type __split_fields  = { [name:Length]
                           [model_trace:.44918]rec__variablestore__variables__mystring__length : Variablestore__variables__mystring__T13s.t13s;
                           [model_trace:.44922]
                           [name:Str]rec__variablestore__variables__mystring__str : Array__Int__Standard__character.map }
  
  function [name:Length] [model_trace:.44918] 
    __split_fields_rec__variablestore__variables__mystring__length__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Variablestore__variables__mystring__T13s.t13s = a.rec__variablestore__variables__mystring__length
  
  meta model_projection function __split_fields_rec__variablestore__variables__mystring__length__projection
  
  meta inline:no function __split_fields_rec__variablestore__variables__mystring__length__projection
  
  function [model_trace:.44922] [name:Str] 
    __split_fields_rec__variablestore__variables__mystring__str__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Standard__character.map = a.rec__variablestore__variables__mystring__str
  
  meta model_projection function __split_fields_rec__variablestore__variables__mystring__str__projection
  
  meta inline:no function __split_fields_rec__variablestore__variables__mystring__str__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   variablestore__variables__mystring__length__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__variablestore__variables__mystring__length_ (a : __rep)
    requires { (variablestore__variables__mystring__length__pred a) }
    ensures 
    { (result
         = a.__split_fields.rec__variablestore__variables__mystring__length) }
    returns Variablestore__variables__mystring__T13s.t13s
  
  function   variablestore__variables__mystring__str__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__variablestore__variables__mystring__str_ (a : __rep)
    requires { (variablestore__variables__mystring__str__pred a) } ensures 
    { (result = a.__split_fields.rec__variablestore__variables__mystring__str) }
    returns Array__Int__Standard__character.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Variablestore__variables__mystring__T13s__rep.to_rep
                a.__split_fields.rec__variablestore__variables__mystring__length)
               = (Variablestore__variables__mystring__T13s__rep.to_rep
                    b.__split_fields.rec__variablestore__variables__mystring__length))
              /\
              (Variablestore__variables__mystringstr.bool_eq
                 a.__split_fields.rec__variablestore__variables__mystring__str
                 b.__split_fields.rec__variablestore__variables__mystring__str))
           then True  else False)

end

(* Module for axiomatizing type "variable" defined at variablestore.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Variablestore__variable
  
  use export Variablestore__variables__mystring__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type variable  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   variablestore__variables__mystring__length__first__bit ()
    requires {  } ensures  {  } returns int
  
  function   variablestore__variables__mystring__length__last__bit ()
    requires {  } ensures  {  } returns int
  
  function   variablestore__variables__mystring__length__position () requires
    {  } ensures  {  } returns int
  
  axiom variablestore__variables__mystring__length__first__bit_axiom : 
  ((variablestore__variables__mystring__length__first__bit ) >= 0)
  
  axiom variablestore__variables__mystring__length__last__bit_axiom : 
  ((variablestore__variables__mystring__length__last__bit )
     > (variablestore__variables__mystring__length__first__bit ))
  
  axiom variablestore__variables__mystring__length__position_axiom : 
  ((variablestore__variables__mystring__length__position ) >= 0)
  
  function   variablestore__variables__mystring__str__first__bit () requires
    {  } ensures  {  } returns int
  
  function   variablestore__variables__mystring__str__last__bit () requires
    {  } ensures  {  } returns int
  
  function   variablestore__variables__mystring__str__position () requires
    {  } ensures  {  } returns int
  
  axiom variablestore__variables__mystring__str__first__bit_axiom : ((variablestore__variables__mystring__str__first__bit
                                                                    ) >= 0)
  
  axiom variablestore__variables__mystring__str__last__bit_axiom : ((variablestore__variables__mystring__str__last__bit
                                                                    )
                                                                    > (
                                                                    variablestore__variables__mystring__str__first__bit
                                                                    ))
  
  axiom variablestore__variables__mystring__str__position_axiom : ((variablestore__variables__mystring__str__position
                                                                    ) >= 0)
  
  function   user_eq (a : variable b : variable) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns variable
  
  type variable__ref  = { mutable variable__content : variable }
  
  function   variable__ref_variable__content__projection (a : variable__ref)
    requires {  } ensures  {  } returns variable = a.variable__content
  
  meta model_projection function variable__ref_variable__content__projection
  
  meta inline:no function variable__ref_variable__content__projection
  
  function   variable__havoc (x : variable__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for possibly declaring a logic function for "from_string" defined at variablestore.ads:30, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Variablestore__from_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  use        Variablestore__variable
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures  { True } returns Variablestore__variable.variable
  
  function   from_string__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_163) : Variablestore__variable.variable
    s : Standard__string.string__) requires { True } ensures  { True }
    returns bool

end

(* Module giving axioms for type "variable" defined at variablestore.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Variablestore__variable___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__variable
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_237) : Variablestore__variable.variable
    ([mlw:proxy_symbol] [introduced] temp___is_init_233) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_234) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_235) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_236) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_239) : Variablestore__variable.variable
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_240) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "from_string" defined at variablestore.ads:30, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Variablestore__from_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__string
  use        Variablestore__variable
  use        Variablestore__from_string
  use        Variablestore__variable___axiom
  
  function   from_string (s : Standard__string.string__) requires
    { ([GP_Pretty_Ada:45497] ((Standard__string.length s) <= 1024)) }
    ensures 
    { ((result = (Variablestore__from_string.from_string s)) /\
         (Variablestore__from_string.from_string__function_guard result s) /\
         (Variablestore__variable___axiom.dynamic_invariant result True False
            True True)) } returns Variablestore__variable.variable

end

(* Module for defining a ref holding the value of variable "var" defined at main.adb:21, created in Gnat2Why.Decls.Translate_Variable *)
module Main__var
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__variable
  
  val var__split_fields [model_trace:869] [model_projected]
  [name:VAR] [sloc:main.adb:21]: Variablestore__variable.__split_fields

end

(* Module for axiomatizing type "T13s" defined at stack.ads:35 instantiated at operations.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Operations__operandstack__stack__T13s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type t13s  = <range 0 512>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 512
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = t13s,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type t13s__ref  = { mutable t13s__content : t13s }
  
  function   t13s__ref_t13s__content__2__projection (a : t13s__ref) requires
    {  } ensures  {  } returns t13s = a.t13s__content
  
  meta model_projection function t13s__ref_t13s__content__2__projection
  
  meta inline:no function t13s__ref_t13s__content__2__projection
  
  function   t13s__havoc (x : t13s__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "T13s" defined at stack.ads:35 instantiated at operations.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Operations__operandstack__stack__T13s__rep
  
  use        Operations__operandstack__stack__T13s
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Operations__operandstack__stack__T13s.t13s) requires
    { True } ensures  { True } returns
    int = (Operations__operandstack__stack__T13s.t13s'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Operations__operandstack__stack__T13s.t13s,
    predicate in_range = Operations__operandstack__stack__T13s.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "TstoragearrayB" defined at stack.ads:32 instantiated at operations.ads:5, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__integer
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__integer__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for axiomatizing type "storagearray" defined at stack.ads:32 instantiated at operations.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Operations__operandstack__storagearray
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Array__Int__Standard__integer
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 512
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Standard__integer.map,
    function array_bool_eq = Array__Int__Standard__integer.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "stack" defined at stack.ads:34 instantiated at operations.ads:5, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Operations__operandstack__stack__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Operations__operandstack__stack__T13s
  use        Operations__operandstack__stack__T13s__rep
  use        Operations__operandstack__storagearray
  use        Array__Int__Standard__integer
  use        Array__Int__Standard__integer
  use        Array__Int__Standard__integer
  use        Array__Int__Standard__integer
  
  type __split_fields  = { [model_trace:.69071]
                           [name:size]rec__operations__operandstack__stack__size : Operations__operandstack__stack__T13s.t13s;
                           [model_trace:.69075]
                           [name:storage]rec__operations__operandstack__stack__storage : Array__Int__Standard__integer.map }
  
  function [model_trace:.69071] [name:size] 
    __split_fields_rec__operations__operandstack__stack__size__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Operations__operandstack__stack__T13s.t13s = a.rec__operations__operandstack__stack__size
  
  meta model_projection function __split_fields_rec__operations__operandstack__stack__size__projection
  
  meta inline:no function __split_fields_rec__operations__operandstack__stack__size__projection
  
  function [model_trace:.69075] [name:storage] 
    __split_fields_rec__operations__operandstack__stack__storage__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Standard__integer.map = a.rec__operations__operandstack__stack__storage
  
  meta model_projection function __split_fields_rec__operations__operandstack__stack__storage__projection
  
  meta inline:no function __split_fields_rec__operations__operandstack__stack__storage__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__2__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__2__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__2__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__2__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__2__projection
  
  meta inline:no function __rep___split_fields__2__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   operations__operandstack__stack__size__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__operations__operandstack__stack__size_ (a : __rep) requires
    { (operations__operandstack__stack__size__pred a) } ensures 
    { (result = a.__split_fields.rec__operations__operandstack__stack__size) }
    returns Operations__operandstack__stack__T13s.t13s
  
  function   operations__operandstack__stack__storage__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__operations__operandstack__stack__storage_ (a : __rep)
    requires { (operations__operandstack__stack__storage__pred a) } ensures 
    { (result
         = a.__split_fields.rec__operations__operandstack__stack__storage) }
    returns Array__Int__Standard__integer.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Operations__operandstack__stack__T13s__rep.to_rep
                a.__split_fields.rec__operations__operandstack__stack__size)
               = (Operations__operandstack__stack__T13s__rep.to_rep
                    b.__split_fields.rec__operations__operandstack__stack__size))
              /\
              (Operations__operandstack__storagearray.bool_eq
                 a.__split_fields.rec__operations__operandstack__stack__storage
                 b.__split_fields.rec__operations__operandstack__stack__storage))
           then True  else False)

end

(* Module for axiomatizing type "stack" defined at stack.ads:34 instantiated at operations.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Operations__operandstack__stack
  
  use export Operations__operandstack__stack__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type stack  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   operations__operandstack__stack__size__first__bit () requires
    {  } ensures  {  } returns int
  
  function   operations__operandstack__stack__size__last__bit () requires
    {  } ensures  {  } returns int
  
  function   operations__operandstack__stack__size__position () requires {  }
    ensures  {  } returns int
  
  axiom operations__operandstack__stack__size__first__bit_axiom : ((operations__operandstack__stack__size__first__bit
                                                                    ) >= 0)
  
  axiom operations__operandstack__stack__size__last__bit_axiom : ((operations__operandstack__stack__size__last__bit
                                                                    )
                                                                    > (
                                                                    operations__operandstack__stack__size__first__bit
                                                                    ))
  
  axiom operations__operandstack__stack__size__position_axiom : ((operations__operandstack__stack__size__position
                                                                    ) >= 0)
  
  function   operations__operandstack__stack__storage__first__bit () requires
    {  } ensures  {  } returns int
  
  function   operations__operandstack__stack__storage__last__bit () requires
    {  } ensures  {  } returns int
  
  function   operations__operandstack__stack__storage__position () requires
    {  } ensures  {  } returns int
  
  axiom operations__operandstack__stack__storage__first__bit_axiom : 
  ((operations__operandstack__stack__storage__first__bit ) >= 0)
  
  axiom operations__operandstack__stack__storage__last__bit_axiom : ((operations__operandstack__stack__storage__last__bit
                                                                    )
                                                                    > (operations__operandstack__stack__storage__first__bit
                                                                    ))
  
  axiom operations__operandstack__stack__storage__position_axiom : ((operations__operandstack__stack__storage__position
                                                                    ) >= 0)
  
  function   user_eq (a : stack b : stack) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns stack
  
  type stack__ref  = { mutable stack__content : stack }
  
  function   stack__ref_stack__content__projection (a : stack__ref) requires
    {  } ensures  {  } returns stack = a.stack__content
  
  meta model_projection function stack__ref_stack__content__projection
  
  meta inline:no function stack__ref_stack__content__projection
  
  function   stack__havoc (x : stack__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for defining a ref holding the value of variable "opstack" defined at main.adb:22, created in Gnat2Why.Decls.Translate_Variable *)
module Main__opstack
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Operations__operandstack__stack
  
  val opstack__split_fields [name:OpStack] [model_projected]
  [model_trace:879] [sloc:main.adb:22]: Operations__operandstack__stack.__split_fields

end

(* Module giving axioms for type "stack" defined at stack.ads:34 instantiated at operations.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Operations__operandstack__stack___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Operations__operandstack__stack
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_261) : Operations__operandstack__stack.stack
    ([mlw:proxy_symbol] [introduced] temp___is_init_257) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_258) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_259) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_260) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_263) : Operations__operandstack__stack.stack
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_264) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining a ref holding the value of variable "master_pin" defined at main.adb:25, created in Gnat2Why.Decls.Translate_Variable *)
module Main__master_pin
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val master_pin [model_projected] [model_trace:884]
  [name:MASTER_PIN] [sloc:main.adb:25]: int

end

(* Module for defining a ref holding the value of variable "islocked" defined at main.adb:28, created in Gnat2Why.Decls.Translate_Variable *)
module Main__islocked
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val islocked [name:IsLocked] [model_projected]
  [model_trace:889] [sloc:main.adb:28]: bool

end

(* Module for axiomatizing type "T14b" defined at mystring.ads:38 instantiated at main.adb:31, created in Gnat2Why.Types.Translate_Type *)
module Main__lines__mystring__T14b
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type t14b  = <range 0 2048>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 2048
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = t14b,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type t14b__ref  = { mutable t14b__content : t14b }
  
  function   t14b__ref_t14b__content__projection (a : t14b__ref) requires
    {  } ensures  {  } returns t14b = a.t14b__content
  
  meta model_projection function t14b__ref_t14b__content__projection
  
  meta inline:no function t14b__ref_t14b__content__projection
  
  function   t14b__havoc (x : t14b__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "T14b" defined at mystring.ads:38 instantiated at main.adb:31, created in Gnat2Why.Types.Translate_Type *)
module Main__lines__mystring__T14b__rep
  
  use        Main__lines__mystring__T14b
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Main__lines__mystring__T14b.t14b) requires { True }
    ensures  { True } returns int = (Main__lines__mystring__T14b.t14b'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Main__lines__mystring__T14b.t14b,
    predicate in_range = Main__lines__mystring__T14b.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "mystringstr" defined at mystring.ads:36 instantiated at main.adb:31, created in Gnat2Why.Types.Translate_Type *)
module Main__lines__mystringstr
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Array__Int__Standard__character
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 2048
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "mystring" defined at mystring.ads:37 instantiated at main.adb:31, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Main__lines__mystring__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring__T14b
  use        Main__lines__mystring__T14b__rep
  use        Main__lines__mystringstr
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  type __split_fields  = { [model_trace:.69856]
                           [name:Length]rec__main__lines__mystring__length : Main__lines__mystring__T14b.t14b;
                           [name:Str]
                           [model_trace:.69860]rec__main__lines__mystring__str : Array__Int__Standard__character.map }
  
  function [model_trace:.69856] [name:Length] 
    __split_fields_rec__main__lines__mystring__length__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Main__lines__mystring__T14b.t14b = a.rec__main__lines__mystring__length
  
  meta model_projection function __split_fields_rec__main__lines__mystring__length__projection
  
  meta inline:no function __split_fields_rec__main__lines__mystring__length__projection
  
  function [name:Str] [model_trace:.69860] 
    __split_fields_rec__main__lines__mystring__str__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Standard__character.map = a.rec__main__lines__mystring__str
  
  meta model_projection function __split_fields_rec__main__lines__mystring__str__projection
  
  meta inline:no function __split_fields_rec__main__lines__mystring__str__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__3__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__3__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__3__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__3__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__3__projection
  
  meta inline:no function __rep___split_fields__3__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   main__lines__mystring__length__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__main__lines__mystring__length_ (a : __rep) requires
    { (main__lines__mystring__length__pred a) } ensures 
    { (result = a.__split_fields.rec__main__lines__mystring__length) }
    returns Main__lines__mystring__T14b.t14b
  
  function   main__lines__mystring__str__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__main__lines__mystring__str_ (a : __rep) requires
    { (main__lines__mystring__str__pred a) } ensures 
    { (result = a.__split_fields.rec__main__lines__mystring__str) } returns
    Array__Int__Standard__character.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Main__lines__mystring__T14b__rep.to_rep
                a.__split_fields.rec__main__lines__mystring__length)
               = (Main__lines__mystring__T14b__rep.to_rep
                    b.__split_fields.rec__main__lines__mystring__length)) /\
              (Main__lines__mystringstr.bool_eq
                 a.__split_fields.rec__main__lines__mystring__str
                 b.__split_fields.rec__main__lines__mystring__str))
           then True  else False)

end

(* Module for axiomatizing type "mystring" defined at mystring.ads:37 instantiated at main.adb:31, created in Gnat2Why.Types.Translate_Type *)
module Main__lines__mystring
  
  use export Main__lines__mystring__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type mystring  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   main__lines__mystring__length__first__bit () requires {  }
    ensures  {  } returns int
  
  function   main__lines__mystring__length__last__bit () requires {  }
    ensures  {  } returns int
  
  function   main__lines__mystring__length__position () requires {  }
    ensures  {  } returns int
  
  axiom main__lines__mystring__length__first__bit_axiom : ((main__lines__mystring__length__first__bit
                                                              ) >= 0)
  
  axiom main__lines__mystring__length__last__bit_axiom : ((main__lines__mystring__length__last__bit
                                                             )
                                                            > (main__lines__mystring__length__first__bit
                                                                 ))
  
  axiom main__lines__mystring__length__position_axiom : ((main__lines__mystring__length__position
                                                            ) >= 0)
  
  function   main__lines__mystring__str__first__bit () requires {  } ensures 
    {  } returns int
  
  function   main__lines__mystring__str__last__bit () requires {  } ensures 
    {  } returns int
  
  function   main__lines__mystring__str__position () requires {  } ensures 
    {  } returns int
  
  axiom main__lines__mystring__str__first__bit_axiom : ((main__lines__mystring__str__first__bit
                                                           ) >= 0)
  
  axiom main__lines__mystring__str__last__bit_axiom : ((main__lines__mystring__str__last__bit
                                                          )
                                                         > (main__lines__mystring__str__first__bit
                                                              ))
  
  axiom main__lines__mystring__str__position_axiom : ((main__lines__mystring__str__position
                                                         ) >= 0)
  
  function   user_eq (a : mystring b : mystring) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns mystring
  
  type mystring__ref  = { mutable mystring__content : mystring }
  
  function   mystring__ref_mystring__content__2__projection
    (a : mystring__ref) requires {  } ensures  {  } returns
    mystring = a.mystring__content
  
  meta model_projection function mystring__ref_mystring__content__2__projection
  
  meta inline:no function mystring__ref_mystring__content__2__projection
  
  function   mystring__havoc (x : mystring__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for possibly declaring a logic function for "to_string" defined at mystring.ads:8 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main__lines__to_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  use        Main__lines__mystring
  
  function   to_string (m : Main__lines__mystring.mystring) requires { True }
    ensures  { True } returns Standard__string.string__
  
  function   to_string__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_166) : Standard__string.string__
    m : Main__lines__mystring.mystring) requires { True } ensures  { True }
    returns bool

end

(* Module for possibly declaring a logic function for "length" defined at mystring.ads:23 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main__lines__length
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  function   length (m : Main__lines__mystring.mystring) requires { True }
    ensures  { True } returns int
  
  function   length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_165) : int
    m : Main__lines__mystring.mystring) requires { True } ensures  { True }
    returns bool

end

(* Module giving axioms for type "mystring" defined at mystring.ads:37 instantiated at main.adb:31, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__lines__mystring___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_290) : Main__lines__mystring.mystring
    ([mlw:proxy_symbol] [introduced] temp___is_init_286) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_287) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_288) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_289) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_292) : Main__lines__mystring.mystring
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_293) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "to_string" defined at mystring.ads:8 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main__lines__to_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__string
  use        Standard__string___axiom
  use        Main__lines__mystring
  use        Main__lines__length
  use        Main__lines__to_string
  use        Main__lines__mystring___axiom
  
  function   to_string (m : Main__lines__mystring.mystring) requires { True }
    ensures 
    { ((result = (Main__lines__to_string.to_string m)) /\
         (Main__lines__to_string.to_string__function_guard result m) /\
         ((Standard__string___axiom.dynamic_invariant result True False True
             True) /\
            ((([GP_Pretty_Ada:69896] ((Standard__string.length result)
                                        = (epsilon ([mlw:proxy_symbol]
                                          [introduced] temp___result_298) : int {
                                          ((([mlw:proxy_symbol]
                                              [introduced] temp___result_298)
                                              = (Main__lines__length.length
                                                   ( m))) /\
                                             (Main__lines__length.length__function_guard
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___result_298)
                                                ( m)))}))) /\
                ([GP_Pretty_Ada:69903] ((Standard__string.first result) = 1)))
               /\
               ([GP_Pretty_Ada:69908] ((Standard__string.last result)
                                         = (epsilon ([mlw:proxy_symbol]
                                           [introduced] temp___result_299) : int {
                                           ((([mlw:proxy_symbol]
                                               [introduced] temp___result_299)
                                               = (Main__lines__length.length
                                                    ( m))) /\
                                              (Main__lines__length.length__function_guard
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___result_299)
                                                 ( m)))})))))) } returns
    Standard__string.string__
  
  axiom to_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "from_string" defined at mystring.ads:12 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main__lines__from_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  use        Main__lines__mystring
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures  { True } returns Main__lines__mystring.mystring
  
  function   from_string__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_167) : Main__lines__mystring.mystring
    s : Standard__string.string__) requires { True } ensures  { True }
    returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "from_string" defined at mystring.ads:12 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main__lines__from_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__string
  use        Standard__string___axiom
  use        Main__lines__mystring
  use        Main__lines__length
  use        Main__lines__from_string
  use        Main__lines__mystring___axiom
  
  function   from_string (s : Standard__string.string__) requires
    { ([GP_Pretty_Ada:70114] ((Standard__string.length s) <= 2048)) }
    ensures 
    { ((result = (Main__lines__from_string.from_string s)) /\
         (Main__lines__from_string.from_string__function_guard result s) /\
         ((Main__lines__mystring___axiom.dynamic_invariant result True False
             True True) /\
            ([GP_Pretty_Ada:70128] ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_302) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_302)
                                        = (Main__lines__length.length
                                             ( result))) /\
                                       (Main__lines__length.length__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_302)
                                          ( result)))})
                                      = (Standard__string.length s))))) }
    returns Main__lines__mystring.mystring
  
  axiom from_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "get" defined at mystring.ads:30 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main__lines__get
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  function   get (m : Main__lines__mystring.mystring index : int) requires
    { True } ensures  { True } returns int
  
  function   get__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_169) : int
    m : Main__lines__mystring.mystring index : int) requires { True }
    ensures  { True } returns bool

end

(* Module for possibly declaring a logic function for "equal" defined at mystring.ads:18 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main__lines__equal
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  function   equal
    (m1 : Main__lines__mystring.mystring m2 : Main__lines__mystring.mystring)
    requires { True } ensures  { True } returns bool
  
  function   equal__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_170) : bool
    m1 : Main__lines__mystring.mystring m2 : Main__lines__mystring.mystring)
    requires { True } ensures  { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "equal" defined at mystring.ads:18 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main__lines__equal___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Main__lines__mystring
  use        Main__lines__length
  use        Main__lines__get
  use        Main__lines__equal
  
  function   equal
    (m1 : Main__lines__mystring.mystring m2 : Main__lines__mystring.mystring)
    requires { True } ensures 
    { ((result = (Main__lines__equal.equal m1 m2)) /\
         (Main__lines__equal.equal__function_guard result m1 m2) /\
         (if (result = True) then
         (([GP_Pretty_Ada:69960] ((epsilon ([mlw:proxy_symbol]
                                  [introduced] temp___result_308) : int {
                                  ((([mlw:proxy_symbol]
                                      [introduced] temp___result_308)
                                      = (Main__lines__length.length ( m1)))
                                     /\
                                     (Main__lines__length.length__function_guard
                                        ([mlw:proxy_symbol]
                                        [introduced] temp___result_308) 
                                        ( m1)))})
                                    = (epsilon ([mlw:proxy_symbol]
                                      [introduced] temp___result_309) : int {
                                      ((([mlw:proxy_symbol]
                                          [introduced] temp___result_309)
                                          = (Main__lines__length.length ( m2)))
                                         /\
                                         (Main__lines__length.length__function_guard
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___result_309)
                                            ( m2)))}))) /\
            --pp_universal_quantif NOT IMPLEMENTED)
          else ([GP_Pretty_Ada:70288] True))) } returns bool

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__positive
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_53) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_49) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_50) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_51) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_52) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_49) = True) \/
          (Standard__positive.first <= Standard__positive.last))
       then
       (Standard__positive.dynamic_property Standard__positive.first
          Standard__positive.last ([mlw:proxy_symbol]
          [introduced] temp___expr_53))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_54) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_55) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for possibly declaring a logic function for "substring" defined at mystring.ads:26 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main__lines__substring
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  function   substring
    (m : Main__lines__mystring.mystring from : int to__ : int) requires
    { True } ensures  { True } returns Main__lines__mystring.mystring
  
  function   substring__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_171) : Main__lines__mystring.mystring
    m : Main__lines__mystring.mystring from : int to__ : int) requires
    { True } ensures  { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "substring" defined at mystring.ads:26 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main__lines__substring___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__positive___axiom
  use        Main__lines__mystring
  use        Main__lines__length
  use        Main__lines__substring
  use        Main__lines__mystring___axiom
  
  function   substring
    (m : Main__lines__mystring.mystring from : int to__ : int) requires
    { (([GP_Pretty_Ada:70010] (from <= to__)) /\
         ([GP_Pretty_Ada:70013] (to__
                                   <= (epsilon ([mlw:proxy_symbol]
                                      [introduced] temp___result_313) : int {
                                      ((([mlw:proxy_symbol]
                                          [introduced] temp___result_313)
                                          = (Main__lines__length.length ( m)))
                                         /\
                                         (Main__lines__length.length__function_guard
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___result_313)
                                            ( m)))})))) } ensures 
    { ((result = (Main__lines__substring.substring m from to__)) /\
         (Main__lines__substring.substring__function_guard result m from to__)
         /\
         ((Main__lines__mystring___axiom.dynamic_invariant result True False
             True True) /\
            ([GP_Pretty_Ada:70213] ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_314) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_314)
                                        = (Main__lines__length.length
                                             ( result))) /\
                                       (Main__lines__length.length__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_314)
                                          ( result)))}) = ((to__ - from) + 1))))) }
    returns Main__lines__mystring.mystring
  
  axiom substring__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module declaring the external object "ada___ada__text_io__file_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__file_system
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val file_system  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_err  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_err  : _gnatprove_standard.Main.__private

end

(* Module for declaring a program function (and possibly an axiom) for "get_line" defined at mystring.ads:33 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main__lines__get_line___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  use        Main__lines__mystring___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   get_line
    (m__split_fields : Main__lines__mystring.__split_fields__ref) requires
    { True } ensures 
    { (Main__lines__mystring___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for defining a ref holding the value of variable "p" defined at main.adb:32, created in Gnat2Why.Decls.Translate_Variable *)
module Main__p
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  val p__split_fields [model_trace:900] [model_projected]
  [name:P] [sloc:main.adb:32]: Main__lines__mystring.__split_fields

end

(* Module for defining a ref holding the value of variable "command" defined at main.adb:35, created in Gnat2Why.Decls.Translate_Variable *)
module Main__command
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Main__lines__mystring
  
  val command__split_fields [name:COMMAND] [model_trace:905]
  [model_projected] [sloc:main.adb:35]: Main__lines__mystring.__split_fields

end

(* Module for defining a ref holding the value of variable "number" defined at main.adb:38, created in Gnat2Why.Decls.Translate_Variable *)
module Main__number
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val number [model_projected] [name:NUMBER]
  [model_trace:915] [sloc:main.adb:38]: int

end

(* Module for possibly declaring a logic function for "from_string" defined at pin.ads:5, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Pin__from_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures  { True } returns int
  
  function   from_string__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_172) : int
    s : Standard__string.string__) requires { True } ensures  { True }
    returns bool

end

(* Module for axiomatizing type "pin" defined at pin.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Pin__pin
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type pin  = <range 0 9999>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 9999
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = pin,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type pin__ref  = { mutable pin__content : pin }
  
  function   pin__ref_pin__content__projection (a : pin__ref) requires {  }
    ensures  {  } returns pin = a.pin__content
  
  meta model_projection function pin__ref_pin__content__projection
  
  meta inline:no function pin__ref_pin__content__projection
  
  function   pin__havoc (x : pin__ref) requires {  } ensures  {  } returns
    unit

end

(* Module giving axioms for type "pin" defined at pin.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Pin__pin___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Pin__pin
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_273) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_269) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_270) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_271) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_272) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_269) = True) \/
          (Pin__pin.first <= Pin__pin.last))
       then
       (Pin__pin.dynamic_property Pin__pin.first Pin__pin.last
          ([mlw:proxy_symbol] [introduced] temp___expr_273))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_274) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_275) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "from_string" defined at pin.ads:5, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Pin__from_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Standard__string
  use        Standard__string___axiom
  use        Pin__from_string
  use        Pin__pin___axiom
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   from_string (s : Standard__string.string__) requires
    { (([GP_Pretty_Ada:12380] ((Standard__string.length s) = 4)) /\
         --pp_universal_quantif NOT IMPLEMENTED) } ensures 
    { ((result = (Pin__from_string.from_string s)) /\
         (Pin__from_string.from_string__function_guard result s) /\
         (Pin__pin___axiom.dynamic_invariant result True False True True)) }
    returns int
  
  axiom from_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "enter_pin" defined at main.adb:41, created in Gnat2Why.Decls.Translate_Variable *)
module Main__enter_pin
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val enter_pin [model_projected] [name:ENTER_PIN]
  [model_trace:919] [sloc:main.adb:41]: int

end

(* Module for defining a ref holding the value of variable "enter_pin_str" defined at main.adb:42, created in Gnat2Why.Decls.Translate_Variable *)
module Main__enter_pin_str
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  val enter_pin_str [model_projected] [name:ENTER_PIN_STR]
  [model_trace:929] [sloc:main.adb:42]: Array__Int__Standard__character.map

end

(* Module for possibly declaring a logic function for "size" defined at stack.ads:13 instantiated at operations.ads:5, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Operations__operandstack__size
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Operations__operandstack__stack
  
  function   size (s : Operations__operandstack__stack.stack) requires
    { True } ensures  { True } returns int
  
  function   size__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_173) : int
    s : Operations__operandstack__stack.stack) requires { True } ensures 
    { True } returns bool

end

(* Module giving a program function and a defining axiom for the expression function "size" defined at stack.ads:13 instantiated at operations.ads:5, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Operations__operandstack__size___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer___axiom
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  use        Operations__operandstack__stack__T13s
  use        Operations__operandstack__stack__T13s__rep
  
  function   size (s : Operations__operandstack__stack.stack) requires
    { True } ensures 
    { ((result = (Operations__operandstack__size.size s)) /\
         (Operations__operandstack__size.size__function_guard result s) /\
         ((Standard__integer___axiom.dynamic_invariant result True False True
             True) /\
            (result
               = ( (Operations__operandstack__stack__T13s__rep.to_rep
                      ( s).Operations__operandstack__stack.__split_fields.Operations__operandstack__stack.rec__operations__operandstack__stack__size))))) }
    returns int
  
  axiom size__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom size__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at stack.ads:10 instantiated at operations.ads:5, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__operandstack__init___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   init
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref)
    requires { True } ensures 
    { (([GP_Pretty_Ada:69285] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_352) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_352)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_352)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = 0)) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module giving axioms for type "database" defined at variablestore.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Variablestore__database___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__database
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_208) : Variablestore__database.database
    ([mlw:proxy_symbol] [introduced] temp___is_init_204) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_205) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_206) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_207) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_209) : Variablestore__database.database
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_210) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at variablestore.ads:17, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Variablestore__init___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__database
  use        Variablestore__database___axiom
  
  function   init (d : Variablestore__database.database__ref) requires
    { True } ensures 
    { (Variablestore__database___axiom.dynamic_invariant !d True True True
         True) } returns unit

end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__line_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   line_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   line_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_161) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__page_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   page_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   page_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_162) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at a-textio.ads:463, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__put__4___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Standard__string
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   put (item : Standard__string.string__) requires { True }
    ensures 
    { (([GP_Pretty_Ada:14471] (--pp_tagged NOT IMPLEMENTED
                                 = (Ada___ada__text_io__line_length__2.line_length
                                      !Ada___ada__text_io__file_system.file_system
                                      !Ada___ada__text_io__standard_in.standard_in
                                      !Ada___ada__text_io__standard_out.standard_out
                                      !Ada___ada__text_io__standard_err.standard_err
                                      !Ada___ada__text_io__current_in.current_in
                                      !Ada___ada__text_io__current_out.current_out
                                      !Ada___ada__text_io__current_err.current_err)))
         /\
         ([GP_Pretty_Ada:14477] (--pp_tagged NOT IMPLEMENTED
                                   = (Ada___ada__text_io__page_length__2.page_length
                                        !Ada___ada__text_io__file_system.file_system
                                        !Ada___ada__text_io__standard_in.standard_in
                                        !Ada___ada__text_io__standard_out.standard_out
                                        !Ada___ada__text_io__standard_err.standard_err
                                        !Ada___ada__text_io__current_in.current_in
                                        !Ada___ada__text_io__current_out.current_out
                                        !Ada___ada__text_io__current_err.current_err)))) }
    returns unit

end

(* Module for axiomatizing the record theory associated to type "tokenextent" defined at mystringtokeniser.ads:5, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Mystringtokeniser__tokenextent__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  use        Standard__natural__rep
  use        Standard__positive
  use        Standard__positive__rep
  
  type __split_fields  = { [model_trace:.10775]
                           [name:Start]rec__mystringtokeniser__tokenextent__start : Standard__positive.positive;
                           [model_trace:.10780]
                           [name:Length]rec__mystringtokeniser__tokenextent__length : Standard__natural.natural }
  
  function [model_trace:.10775] [name:Start] 
    __split_fields_rec__mystringtokeniser__tokenextent__start__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Standard__positive.positive = a.rec__mystringtokeniser__tokenextent__start
  
  meta model_projection function __split_fields_rec__mystringtokeniser__tokenextent__start__projection
  
  meta inline:no function __split_fields_rec__mystringtokeniser__tokenextent__start__projection
  
  function [model_trace:.10780] [name:Length] 
    __split_fields_rec__mystringtokeniser__tokenextent__length__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Standard__natural.natural = a.rec__mystringtokeniser__tokenextent__length
  
  meta model_projection function __split_fields_rec__mystringtokeniser__tokenextent__length__projection
  
  meta inline:no function __split_fields_rec__mystringtokeniser__tokenextent__length__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__4__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__4__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__4__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__4__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__4__projection
  
  meta inline:no function __rep___split_fields__4__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   mystringtokeniser__tokenextent__start__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__mystringtokeniser__tokenextent__start_ (a : __rep) requires
    { (mystringtokeniser__tokenextent__start__pred a) } ensures 
    { (result = a.__split_fields.rec__mystringtokeniser__tokenextent__start) }
    returns Standard__positive.positive
  
  function   mystringtokeniser__tokenextent__length__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__mystringtokeniser__tokenextent__length_ (a : __rep)
    requires { (mystringtokeniser__tokenextent__length__pred a) } ensures 
    { (result = a.__split_fields.rec__mystringtokeniser__tokenextent__length) }
    returns Standard__natural.natural
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Standard__positive__rep.to_rep
                a.__split_fields.rec__mystringtokeniser__tokenextent__start)
               = (Standard__positive__rep.to_rep
                    b.__split_fields.rec__mystringtokeniser__tokenextent__start))
              /\
              ((Standard__natural__rep.to_rep
                  a.__split_fields.rec__mystringtokeniser__tokenextent__length)
                 = (Standard__natural__rep.to_rep
                      b.__split_fields.rec__mystringtokeniser__tokenextent__length)))
           then True  else False)

end

(* Module for axiomatizing type "tokenextent" defined at mystringtokeniser.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Mystringtokeniser__tokenextent
  
  use export Mystringtokeniser__tokenextent__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tokenextent  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   mystringtokeniser__tokenextent__start__first__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__start__last__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__start__position () requires {  }
    ensures  {  } returns int
  
  axiom mystringtokeniser__tokenextent__start__first__bit_axiom : ((mystringtokeniser__tokenextent__start__first__bit
                                                                    ) >= 0)
  
  axiom mystringtokeniser__tokenextent__start__last__bit_axiom : ((mystringtokeniser__tokenextent__start__last__bit
                                                                    )
                                                                    > (
                                                                    mystringtokeniser__tokenextent__start__first__bit
                                                                    ))
  
  axiom mystringtokeniser__tokenextent__start__position_axiom : ((mystringtokeniser__tokenextent__start__position
                                                                    ) >= 0)
  
  function   mystringtokeniser__tokenextent__length__first__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__length__last__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__length__position () requires
    {  } ensures  {  } returns int
  
  axiom mystringtokeniser__tokenextent__length__first__bit_axiom : ((mystringtokeniser__tokenextent__length__first__bit
                                                                    ) >= 0)
  
  axiom mystringtokeniser__tokenextent__length__last__bit_axiom : ((mystringtokeniser__tokenextent__length__last__bit
                                                                    )
                                                                    > (
                                                                    mystringtokeniser__tokenextent__length__first__bit
                                                                    ))
  
  axiom mystringtokeniser__tokenextent__length__position_axiom : ((mystringtokeniser__tokenextent__length__position
                                                                    ) >= 0)
  
  function   user_eq (a : tokenextent b : tokenextent) requires { True }
    ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns tokenextent
  
  type tokenextent__ref  = { mutable tokenextent__content : tokenextent }
  
  function   tokenextent__ref_tokenextent__content__projection
    (a : tokenextent__ref) requires {  } ensures  {  } returns
    tokenextent = a.tokenextent__content
  
  meta model_projection function tokenextent__ref_tokenextent__content__projection
  
  meta inline:no function tokenextent__ref_tokenextent__content__projection
  
  function   tokenextent__havoc (x : tokenextent__ref) requires {  } ensures 
    {  } returns unit

end

(* Module for axiomatizing the array theory associated to type "tokenarray" defined at mystringtokeniser.ads:10, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Mystringtokeniser__tokenextent
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Mystringtokeniser__tokenextent
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "t" defined at main.adb:70, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_3__t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Mystringtokeniser__tokenextent
  
  val t [model_projected] [model_trace:1014]
  [name:T] [sloc:main.adb:70]: Array__Int__Mystringtokeniser__tokenextent.map

end

(* Module for defining a ref holding the value of variable "numtokens" defined at main.adb:71, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_3__numtokens
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val numtokens [model_trace:1035] [model_projected]
  [name:NumTokens] [sloc:main.adb:71]: int

end

(* Module for axiomatizing type "tokenarray" defined at mystringtokeniser.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Mystringtokeniser__tokenarray
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__positive
  use        Standard__integer__rep
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Mystringtokeniser__tokenextent.map,
    function array_bool_eq = Array__Int__Mystringtokeniser__tokenextent.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = <=
  
  type tokenarray  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type tokenarray__ref  = { mutable tokenarray__content : tokenarray }
  
  function   tokenarray__ref_tokenarray__content__projection
    (a : tokenarray__ref) requires {  } ensures  {  } returns
    tokenarray = a.tokenarray__content
  
  meta model_projection function tokenarray__ref_tokenarray__content__projection
  
  meta inline:no function tokenarray__ref_tokenarray__content__projection
  
  function   tokenarray__havoc (x : tokenarray__ref) requires {  } ensures 
    {  } returns unit

end

(* Module giving axioms for type "tokenarray" defined at mystringtokeniser.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystringtokeniser__tokenarray___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__positive
  use        Mystringtokeniser__tokenarray
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_368) : Mystringtokeniser__tokenarray.tokenarray
    ([mlw:proxy_symbol] [introduced] temp___is_init_364) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_365) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_366) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_367) : bool) requires
    { True } ensures  { True } returns
     = (if ([mlw:proxy_symbol] [introduced] temp___skip_constant_365) then
       True  else
       (Mystringtokeniser__tokenarray.dynamic_property
          Standard__positive.first Standard__positive.last
          (Mystringtokeniser__tokenarray.first ([mlw:proxy_symbol]
             [introduced] temp___expr_368))
          (Mystringtokeniser__tokenarray.last ([mlw:proxy_symbol]
             [introduced] temp___expr_368))))

end

(* Module for declaring a program function (and possibly an axiom) for "tokenise" defined at mystringtokeniser.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Mystringtokeniser__tokenise___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Integer
  use        Standard__integer
  use        Standard__natural
  use        Standard__natural___axiom
  use        Standard__natural__rep
  use        Standard__positive
  use        Standard__positive__rep
  use        Standard__string
  use        Standard__integer__rep
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenarray
  use        Mystringtokeniser__tokenarray___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   tokenise
    (s : Standard__string.string__
    tokens : Array__Int__Mystringtokeniser__tokenextent.map__ref
    tokens__first : Standard__integer.integer
    tokens__last : Standard__integer.integer count : int__ref) requires
    { ((if ((Standard__string.length s) > 0) then
       ([GP_Pretty_Ada:10847] ((Standard__string.first s)
                                 <= (Standard__string.last s)))
        else ([GP_Pretty_Ada:63992] True)) /\
         ([GP_Pretty_Ada:10856] ((Standard__integer__rep.to_rep tokens__first)
                                   <= (Standard__integer__rep.to_rep
                                         tokens__last)))) } ensures 
    { ((([GP_Pretty_Ada:10864] (!count
                                  <= (_gnatprove_standard.Integer.length
                                        (Standard__integer__rep.to_rep
                                           tokens__first)
                                        (Standard__integer__rep.to_rep
                                           tokens__last)))) /\
          --pp_universal_quantif NOT IMPLEMENTED) /\
         ((Mystringtokeniser__tokenarray___axiom.dynamic_invariant
             (Mystringtokeniser__tokenarray.of_array !tokens
                (Standard__integer__rep.to_rep tokens__first)
                (Standard__integer__rep.to_rep tokens__last)) True True True
             True) /\
            (Standard__natural___axiom.dynamic_invariant !count True True
               True True))) } returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:506, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__put_line__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Standard__string
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   put_line (item : Standard__string.string__) requires { True }
    ensures 
    { (([GP_Pretty_Ada:14693] (--pp_tagged NOT IMPLEMENTED
                                 = (Ada___ada__text_io__line_length__2.line_length
                                      !Ada___ada__text_io__file_system.file_system
                                      !Ada___ada__text_io__standard_in.standard_in
                                      !Ada___ada__text_io__standard_out.standard_out
                                      !Ada___ada__text_io__standard_err.standard_err
                                      !Ada___ada__text_io__current_in.current_in
                                      !Ada___ada__text_io__current_out.current_out
                                      !Ada___ada__text_io__current_err.current_err)))
         /\
         ([GP_Pretty_Ada:14699] (--pp_tagged NOT IMPLEMENTED
                                   = (Ada___ada__text_io__page_length__2.page_length
                                        !Ada___ada__text_io__file_system.file_system
                                        !Ada___ada__text_io__standard_in.standard_in
                                        !Ada___ada__text_io__standard_out.standard_out
                                        !Ada___ada__text_io__standard_err.standard_err
                                        !Ada___ada__text_io__current_in.current_in
                                        !Ada___ada__text_io__current_out.current_out
                                        !Ada___ada__text_io__current_err.current_err)))) }
    returns unit

end

(* Module for defining the constant "R29b" defined at main.adb:80, created in Gnat2Why.Decls.Translate_Constant *)
module Main__B_3__L_4__R29b
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function  [sloc:main.adb:80] r29b () requires {  } ensures  {  } returns
    int

end

(* Module for defining a ref holding the value of variable "i" defined at main.adb:80, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_3__L_4__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [model_projected] [name:I] [model_trace:1058] [sloc:main.adb:80]: int

end

(* Module for defining a ref holding the value of variable "tokstr" defined at main.adb:82, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_3__B_5__tokstr
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Array__Int__Standard__character
  
  val tokstr [name:TokStr] [model_projected]
  [model_trace:1067] [sloc:main.adb:82]: Array__Int__Standard__character.map
  
  function [name:TokStr] [model_trace:1067'First] [model_projected]
    [sloc:main.adb:82] tokstr__first () requires {  } ensures  {  } returns
    Standard__integer.integer
  
  function [name:TokStr] [model_projected] [model_trace:1067'Last]
    [sloc:main.adb:82] tokstr__last () requires {  } ensures  {  } returns
    Standard__integer.integer

end

(* Module for defining a ref holding the value of variable "t" defined at main.adb:127, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_7__t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Mystringtokeniser__tokenextent
  
  val t [model_trace:1208] [model_projected]
  [name:T] [sloc:main.adb:127]: Array__Int__Mystringtokeniser__tokenextent.map

end

(* Module for defining a ref holding the value of variable "numtokens" defined at main.adb:128, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_7__numtokens
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val numtokens [model_projected] [name:NumTokens]
  [model_trace:1229] [sloc:main.adb:128]: int

end

(* Module for defining the constant "R44b" defined at main.adb:139, created in Gnat2Why.Decls.Translate_Constant *)
module Main__B_7__L_8__R44b
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function  [sloc:main.adb:139] r44b () requires {  } ensures  {  } returns
    int

end

(* Module for defining a ref holding the value of variable "i" defined at main.adb:139, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_7__L_8__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [model_projected] [model_trace:1252]
  [name:I] [sloc:main.adb:139]: int

end

(* Module for defining a ref holding the value of variable "tokstr" defined at main.adb:141, created in Gnat2Why.Decls.Translate_Variable *)
module Main__B_7__B_9__tokstr
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Array__Int__Standard__character
  
  val tokstr [name:TokStr] [model_trace:1261]
  [model_projected] [sloc:main.adb:141]: Array__Int__Standard__character.map
  
  function [name:TokStr] [model_projected] [model_trace:1261'First]
    [sloc:main.adb:141] tokstr__first () requires {  } ensures  {  } returns
    Standard__integer.integer
  
  function [model_trace:1261'Last] [name:TokStr] [model_projected]
    [sloc:main.adb:141] tokstr__last () requires {  } ensures  {  } returns
    Standard__integer.integer

end

(* Module for possibly declaring a logic function for "from_string" defined at stringtointeger.ads:6, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stringtointeger__from_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures  { True } returns int
  
  function   from_string__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_175) : int
    s : Standard__string.string__) requires { True } ensures  { True }
    returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "from_string" defined at stringtointeger.ads:6, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stringtointeger__from_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Standard__integer___axiom
  use        Standard__string
  use        Stringtointeger__from_string
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures 
    { ((result = (Stringtointeger__from_string.from_string s)) /\
         (Stringtointeger__from_string.from_string__function_guard result s)
         /\
         (Standard__integer___axiom.dynamic_invariant result True False True
            True)) } returns int
  
  axiom from_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "plus" defined at operations.ads:8, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__plus___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   plus
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref
    islocked : bool) requires
    { (([GP_Pretty_Ada:18312] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_403) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_403)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_403)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 >= 2)) /\
         ([GP_Pretty_Ada:18316] ((islocked = True) <-> False))) } ensures 
    { (([GP_Pretty_Ada:69520] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_404) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_404)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_404)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_405) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_405)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_405)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      - 1))) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "minus" defined at operations.ads:12, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__minus___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   minus
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref
    islocked : bool) requires
    { (([GP_Pretty_Ada:18356] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_408) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_408)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_408)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 >= 2)) /\
         ([GP_Pretty_Ada:18360] ((islocked = True) <-> False))) } ensures 
    { (([GP_Pretty_Ada:69562] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_409) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_409)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_409)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_410) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_410)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_410)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      - 1))) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "multiply" defined at operations.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__multiply___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   multiply
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref
    islocked : bool) requires
    { (([GP_Pretty_Ada:18400] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_413) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_413)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_413)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 >= 2)) /\
         ([GP_Pretty_Ada:18404] ((islocked = True) <-> False))) } ensures 
    { (([GP_Pretty_Ada:69604] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_414) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_414)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_414)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_415) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_415)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_415)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      - 1))) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "divide" defined at operations.ads:20, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__divide___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   divide
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref
    islocked : bool) requires
    { (([GP_Pretty_Ada:18444] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_418) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_418)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_418)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 >= 2)) /\
         ([GP_Pretty_Ada:18448] ((islocked = True) <-> False))) } ensures 
    { (([GP_Pretty_Ada:69646] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_419) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_419)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_419)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_420) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_420)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_420)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      - 1))) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "push_operation" defined at operations.ads:24, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__push_operation___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   push_operation
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref
    i : int islocked : bool) requires
    { ([GP_Pretty_Ada:69659] ((islocked = True) <-> False)) } ensures 
    { (([GP_Pretty_Ada:69680] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_423) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_423)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_423)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_424) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_424)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_424)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      + 1))) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "pop_operation" defined at operations.ads:28, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__pop_operation___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer___axiom
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   pop_operation
    (s__split_fields : Operations__operandstack__stack.__split_fields__ref
    i : int__ref islocked : bool) requires
    { ([GP_Pretty_Ada:69693] ((islocked = True) <-> False)) } ensures 
    { (([GP_Pretty_Ada:69714] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_427) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_427)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_427)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_428) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_428)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_428)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      - 1))) /\
         ((Operations__operandstack__stack___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True True True True) /\
            (Standard__integer___axiom.dynamic_invariant !i True True True
               True))) } returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "load" defined at operations.ads:33, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__load___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Variablestore__database
  use        Variablestore__variable
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  
  function   load
    (v : Variablestore__variable.variable
    db : Variablestore__database.database
    s__split_fields : Operations__operandstack__stack.__split_fields__ref
    islocked : bool) requires
    { ([GP_Pretty_Ada:69727] ((islocked = True) <-> False)) } ensures 
    { (([GP_Pretty_Ada:69748] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_431) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_431)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_431)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_432) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_432)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_432)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      + 1))) /\
         (Operations__operandstack__stack___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "store" defined at operations.ads:39, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__store___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Variablestore__database
  use        Variablestore__variable
  use        Variablestore__variable___axiom
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__size
  use        Variablestore__database___axiom
  
  function   store
    (v__split_fields : Variablestore__variable.__split_fields__ref
    db : Variablestore__database.database__ref
    s__split_fields : Operations__operandstack__stack.__split_fields__ref
    islocked : bool) requires
    { ([GP_Pretty_Ada:69761] ((islocked = True) <-> False)) } ensures 
    { (([GP_Pretty_Ada:69782] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_436) : int {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_436)
                                   = (Operations__operandstack__size.size
                                        ( --pp_record_aggregate NOT IMPLEMENTED)))
                                  /\
                                  (Operations__operandstack__size.size__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_436)
                                     ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                 = ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_437) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_437)
                                        = (Operations__operandstack__size.size
                                             ( --pp_tagged NOT IMPLEMENTED)))
                                       /\
                                       (Operations__operandstack__size.size__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_437)
                                          ( --pp_tagged NOT IMPLEMENTED)))})
                                      - 1))) /\
         (((Variablestore__variable___axiom.dynamic_invariant
              --pp_record_aggregate NOT IMPLEMENTED True True True True) /\
             (Variablestore__database___axiom.dynamic_invariant !db True True
                True True)) /\
            (Operations__operandstack__stack___axiom.dynamic_invariant
               --pp_record_aggregate NOT IMPLEMENTED True True True True))) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "remove" defined at operations.ads:44, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__remove___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__database
  use        Variablestore__variable
  use        Variablestore__variable___axiom
  use        Variablestore__database___axiom
  
  function   remove
    (v__split_fields : Variablestore__variable.__split_fields__ref
    db : Variablestore__database.database__ref islocked : bool) requires
    { ([GP_Pretty_Ada:69795] ((islocked = True) <-> False)) } ensures 
    { ((Variablestore__variable___axiom.dynamic_invariant
          --pp_record_aggregate NOT IMPLEMENTED True True True True) /\
         (Variablestore__database___axiom.dynamic_invariant !db True True
            True True)) } returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "list" defined at operations.ads:47, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Operations__list___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Variablestore__database
  
  function   list (db : Variablestore__database.database islocked : bool)
    requires { ([GP_Pretty_Ada:69807] ((islocked = True) <-> False)) }
    ensures  { True } returns unit

end

(* Module for axiomatizing type "TTenter_pin_strSP1" defined at main.adb:42, created in Gnat2Why.Types.Translate_Type *)
module Main__TTenter_pin_strSP1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tTenter_pin_strSP1  = <range 1 4>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 4
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = tTenter_pin_strSP1,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type tTenter_pin_strSP1__ref  = { mutable tTenter_pin_strSP1__content : tTenter_pin_strSP1 }
  
  function   tTenter_pin_strSP1__ref_tTenter_pin_strSP1__content__projection
    (a : tTenter_pin_strSP1__ref) requires {  } ensures  {  } returns
    tTenter_pin_strSP1 = a.tTenter_pin_strSP1__content
  
  meta model_projection function tTenter_pin_strSP1__ref_tTenter_pin_strSP1__content__projection
  
  meta inline:no function tTenter_pin_strSP1__ref_tTenter_pin_strSP1__content__projection
  
  function   tTenter_pin_strSP1__havoc (x : tTenter_pin_strSP1__ref) requires
    {  } ensures  {  } returns unit

end

(* Module giving axioms for type "Tenter_pin_strS" defined at main.adb:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__Tenter_pin_strS___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_344) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_340) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_341) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_342) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_343) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_346) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_347) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining the loop exit exception for the loop "L_1" defined at main.adb:63, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Main__L_1
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for defining the loop exit exception for the loop "L_2" defined at main.adb:66, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Main__L_2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for axiomatizing type "TTtSP1" defined at main.adb:70, created in Gnat2Why.Types.Translate_Type *)
module Main__B_3__TTtSP1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tTtSP1  = <range 1 3>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 3
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = tTtSP1,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type tTtSP1__ref  = { mutable tTtSP1__content : tTtSP1 }
  
  function   tTtSP1__ref_tTtSP1__content__projection (a : tTtSP1__ref)
    requires {  } ensures  {  } returns tTtSP1 = a.tTtSP1__content
  
  meta model_projection function tTtSP1__ref_tTtSP1__content__projection
  
  meta inline:no function tTtSP1__ref_tTtSP1__content__projection
  
  function   tTtSP1__havoc (x : tTtSP1__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "TtS" defined at main.adb:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__B_3__TtS___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_374) : Array__Int__Mystringtokeniser__tokenextent.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_370) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_371) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_372) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_373) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_376) : Array__Int__Mystringtokeniser__tokenextent.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_377) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining the loop exit exception for the loop "L_4" defined at main.adb:80, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Main__B_3__L_4
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for defining the loop exit exception for the loop "L_6" defined at main.adb:120, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Main__L_6
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for axiomatizing type "TTtSP1" defined at main.adb:127, created in Gnat2Why.Types.Translate_Type *)
module Main__B_7__TTtSP1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tTtSP1  = <range 1 3>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 3
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = tTtSP1,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type tTtSP1__ref  = { mutable tTtSP1__content : tTtSP1 }
  
  function   tTtSP1__ref_tTtSP1__content__2__projection (a : tTtSP1__ref)
    requires {  } ensures  {  } returns tTtSP1 = a.tTtSP1__content
  
  meta model_projection function tTtSP1__ref_tTtSP1__content__2__projection
  
  meta inline:no function tTtSP1__ref_tTtSP1__content__2__projection
  
  function   tTtSP1__havoc (x : tTtSP1__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "TtS" defined at main.adb:127, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__B_7__TtS___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_394) : Array__Int__Mystringtokeniser__tokenextent.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_390) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_391) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_392) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_393) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_396) : Array__Int__Mystringtokeniser__tokenextent.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_397) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining the loop exit exception for the loop "L_8" defined at main.adb:139, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Main__B_7__L_8
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:21, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_445
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_445 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_445__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:35, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_451
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_451 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_451__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:41, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_453
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_453 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_453__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:42, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_455
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_455 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_455__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:51, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_459
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_459 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_459__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:59, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_463
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_463 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_463__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:67, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_470
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_470 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_470__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring an abstract function for the aggregate at main.adb:70, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Main__B_3__t__aggregate_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   main__B_3__t__aggregate_def
    (([mlw:proxy_symbol]
    [introduced] temp___474) : Mystringtokeniser__tokenextent.tokenextent)
    requires { True } ensures  { True } returns
    Array__Int__Mystringtokeniser__tokenextent.map

end

(* Module for defining a value for string literal  defined at main.adb:76, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_482
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_482 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_482__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:95, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_492
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_492 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_492__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:111, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_504
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_504 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_504__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:115, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_507
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_507 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_507__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:104, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_509
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_509 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_509__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:124, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_516
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_516 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_516__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring an abstract function for the aggregate at main.adb:127, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Main__B_7__t__aggregate_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   main__B_7__t__aggregate_def
    (([mlw:proxy_symbol]
    [introduced] temp___520) : Mystringtokeniser__tokenextent.tokenextent)
    requires { True } ensures  { True } returns
    Array__Int__Mystringtokeniser__tokenextent.map

end

(* Module for defining a value for string literal  defined at main.adb:134, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_528
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_528 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_528__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:155, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_538
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_538 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_538__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:166, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_542
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_542 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_542__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:160, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_549
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_549 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_549__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:216, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_555
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_555 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_555__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:213, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_557
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_557 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_557__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:211, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_561
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_561 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_561__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:209, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_566
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_566 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_566__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:207, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_569
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_569 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_569__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:205, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_573
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_573 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_573__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:203, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_576
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_576 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_576__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:201, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_579
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_579 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_579__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:197, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_581
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_581 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_581__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:195, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_584
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_584 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_584__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:191, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_586
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_586 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_586__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:189, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_589
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_589 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_589__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:185, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_591
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_591 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_591__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:183, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_594
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_594 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_594__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:179, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_596
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_596 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_596__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at main.adb:176, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_598
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_598 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_598__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_81) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_77) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_78) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_79) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_80) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_77) = True) \/
          (Standard__character.first <= Standard__character.last))
       then
       (Standard__character.dynamic_property Standard__character.first
          Standard__character.last ([mlw:proxy_symbol]
          [introduced] temp___expr_81))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_82) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_83) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "db" defined at main.adb:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__db___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "var" defined at main.adb:21, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__var___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "opstack" defined at main.adb:22, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__opstack___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "master_pin" defined at main.adb:25, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__master_pin___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "islocked" defined at main.adb:28, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__islocked___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "p" defined at main.adb:32, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__p___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "command" defined at main.adb:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__command___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "number" defined at main.adb:38, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__number___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "enter_pin" defined at main.adb:41, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__enter_pin___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "enter_pin_str" defined at main.adb:42, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__enter_pin_str___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "t" defined at main.adb:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_3__t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "tokenextent" defined at mystringtokeniser.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystringtokeniser__tokenextent___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_359) : Mystringtokeniser__tokenextent.tokenextent
    ([mlw:proxy_symbol] [introduced] temp___is_init_355) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_356) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_357) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_358) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_360) : Mystringtokeniser__tokenextent.tokenextent
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_361) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining the value of the aggregate at main.adb:70, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Main__B_3__t__aggregate_def___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenextent___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Main__B_3__t__aggregate_def
  use        Array__Int__Mystringtokeniser__tokenextent
  
  axiom def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving an empty axiom for the entity "numtokens" defined at main.adb:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_3__numtokens___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "i" defined at main.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_3__L_4__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "tokstr" defined at main.adb:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_3__B_5__tokstr___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "t" defined at main.adb:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_7__t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining the value of the aggregate at main.adb:127, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Main__B_7__t__aggregate_def___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenextent___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Main__B_7__t__aggregate_def
  use        Array__Int__Mystringtokeniser__tokenextent
  
  axiom def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving an empty axiom for the entity "numtokens" defined at main.adb:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_7__numtokens___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "i" defined at main.adb:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_7__L_8__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "tokstr" defined at main.adb:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_7__B_9__tokstr___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_4" defined at main.adb:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_3__L_4___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_2" defined at main.adb:66, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__L_2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_8" defined at main.adb:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__B_7__L_8___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_6" defined at main.adb:120, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__L_6___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_1" defined at main.adb:63, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__L_1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for axiomatizing type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada___ada__text_io__count
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type count  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = count,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type count__ref  = { mutable count__content : count }
  
  function   count__ref_count__content__projection (a : count__ref) requires
    {  } ensures  {  } returns count = a.count__content
  
  meta model_projection function count__ref_count__content__projection
  
  meta inline:no function count__ref_count__content__projection
  
  function   count__havoc (x : count__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada___ada__text_io__count___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Ada___ada__text_io__count
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_180) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_176) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_177) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_178) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_179) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_176) = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last))
       then
       (Ada___ada__text_io__count.dynamic_property
          Ada___ada__text_io__count.first Ada___ada__text_io__count.last
          ([mlw:proxy_symbol] [introduced] temp___expr_180))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_181) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_182) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__line_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   line_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__line_length__2.line_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom line_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__page_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   page_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__page_length__2.page_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom page_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "storagearray" defined at stack.ads:32 instantiated at operations.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Operations__operandstack__storagearray___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__integer
  use        Array__Int__Standard__integer
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_251) : Array__Int__Standard__integer.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_247) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_248) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_249) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_250) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_253) : Array__Int__Standard__integer.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_254) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "T13s" defined at stack.ads:35 instantiated at operations.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Operations__operandstack__stack__T13s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "mystringstr" defined at mystring.ads:36 instantiated at main.adb:31, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__lines__mystringstr___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_280) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_276) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_277) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_278) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_279) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_282) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_283) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving a program function and a defining axiom for the expression function "length" defined at mystring.ads:23 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Main__lines__length___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__natural___axiom
  use        Main__lines__mystring
  use        Main__lines__length
  use        Main__lines__mystring___axiom
  use        Main__lines__mystring__T14b
  use        Main__lines__mystring__T14b__rep
  
  function   length (m : Main__lines__mystring.mystring) requires { True }
    ensures 
    { ((result = (Main__lines__length.length m)) /\
         (Main__lines__length.length__function_guard result m) /\
         ((Standard__natural___axiom.dynamic_invariant result True False True
             True) /\
            ((result
                = ( (Main__lines__mystring__T14b__rep.to_rep
                       ( m).Main__lines__mystring.__split_fields.Main__lines__mystring.rec__main__lines__mystring__length)))
               /\ ([GP_Pretty_Ada:70178] (result <= 2048))))) } returns int
  
  axiom length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom length__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving a program function and a defining axiom for the expression function "get" defined at mystring.ads:30 instantiated at main.adb:31, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Main__lines__get___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__positive___axiom
  use        Standard__character
  use        Standard__character___axiom
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Main__lines__mystring
  use        Main__lines__length
  use        Main__lines__get
  use        Main__lines__mystring___axiom
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   get (m : Main__lines__mystring.mystring index : int) requires
    { ([GP_Pretty_Ada:70228] (index
                                <= (epsilon ([mlw:proxy_symbol]
                                   [introduced] temp___result_304) : int {
                                   ((([mlw:proxy_symbol]
                                       [introduced] temp___result_304)
                                       = (Main__lines__length.length ( m)))
                                      /\
                                      (Main__lines__length.length__function_guard
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___result_304) 
                                         ( m)))}))) } ensures 
    { ((result = (Main__lines__get.get m index)) /\
         (Main__lines__get.get__function_guard result m index) /\
         ((Standard__character___axiom.dynamic_invariant result True False
             True True) /\
            (result
               = ( (Standard__character__rep.to_rep (let ([mlw:proxy_symbol]
                      [introduced] temp___305) =
                      ( m).Main__lines__mystring.__split_fields.Main__lines__mystring.rec__main__lines__mystring__str
                      in
                      (Array__Int__Standard__character.get
                         ([mlw:proxy_symbol] [introduced] temp___305) index))))))) }
    returns int
  
  axiom get__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom get__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "T14b" defined at mystring.ads:38 instantiated at main.adb:31, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__lines__mystring__T14b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "TTenter_pin_strSP1" defined at main.adb:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__TTenter_pin_strSP1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "TTtSP1" defined at main.adb:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__B_3__TTtSP1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining the value of constant "R29b" defined at main.adb:80, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Main__B_3__L_4__R29b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "TTtSP1" defined at main.adb:127, created in Gnat2Why.Types.Generate_Type_Completion *)
module Main__B_7__TTtSP1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining the value of constant "R44b" defined at main.adb:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Main__B_7__L_8__R44b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "main" defined at main.adb:16, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Main__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Integer
  use        _gnatprove_standard.Boolean
  use        Standard__integer
  use        Standard__integer___axiom
  use        Standard__natural
  use        Standard__natural___axiom
  use        Standard__natural__rep
  use        Standard__positive
  use        Standard__positive__rep
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Standard__string
  use        Standard__integer__rep
  use        Standard__string___axiom
  use        Variablestore__database
  use        Main__db
  use        Variablestore__variable
  use        Variablestore__from_string___axiom
  use        Main__var
  use        Variablestore__variable___axiom
  use        Main__opstack
  use        Operations__operandstack__stack
  use        Operations__operandstack__stack___axiom
  use        Main__master_pin
  use        Main__islocked
  use        Main__lines__mystring
  use        Main__lines__to_string
  use        Main__lines__to_string___axiom
  use        Main__lines__from_string___axiom
  use        Main__lines__equal___axiom
  use        Main__lines__substring___axiom
  use        Main__lines__mystring___axiom
  use        Main__lines__get_line___axiom
  use        Main__p
  use        Main__command
  use        Main__number
  use        Pin__from_string___axiom
  use        Main__enter_pin
  use        Array__Int__Standard__character
  use        Main__enter_pin_str
  use        Operations__operandstack__size___axiom
  use        Operations__operandstack__init___axiom
  use        Variablestore__init___axiom
  use        Ada___ada__text_io__put__4___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Main__B_3__t
  use        Main__B_3__numtokens
  use        Mystringtokeniser__tokenise___axiom
  use        Ada___ada__text_io__put_line__2___axiom
  use        Main__B_3__L_4__R29b
  use        Main__B_3__L_4__i
  use        Array__Int__Standard__character
  use        Main__B_3__B_5__tokstr
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Main__B_7__t
  use        Main__B_7__numtokens
  use        Main__B_7__L_8__R44b
  use        Main__B_7__L_8__i
  use        Array__Int__Standard__character
  use        Main__B_7__B_9__tokstr
  use        Stringtointeger__from_string___axiom
  use        Operations__plus___axiom
  use        Operations__minus___axiom
  use        Operations__multiply___axiom
  use        Operations__divide___axiom
  use        Operations__push_operation___axiom
  use        Operations__pop_operation___axiom
  use        Operations__load___axiom
  use        Operations__store___axiom
  use        Operations__remove___axiom
  use        Operations__list___axiom
  use        Variablestore__database___axiom
  use        Pin__pin___axiom
  use        Main__TTenter_pin_strSP1
  use        Main__Tenter_pin_strS___axiom
  use        Main__L_1
  use        Main__L_2
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenarray
  use        Main__B_3__TTtSP1
  use        Main__B_3__TtS___axiom
  use        Main__B_3__L_4
  use        Main__L_6
  use        Main__B_7__TTtSP1
  use        Main__B_7__TtS___axiom
  use        Main__B_7__L_8
  use        Temp___String_Literal_445
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_451
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_453
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_455
  use        Array__Int__Standard__character
  use        Temp___String_Literal_459
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_463
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_470
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Main__B_3__t__aggregate_def
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Temp___String_Literal_482
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_492
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_504
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_507
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_509
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_516
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Main__B_7__t__aggregate_def
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Temp___String_Literal_528
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_538
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_542
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_549
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_555
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_557
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_561
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_566
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_569
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_573
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_576
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_579
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_581
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_584
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_586
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_589
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_591
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_594
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_596
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_598
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer___axiom
  use        Standard__natural___axiom
  use        Standard__positive___axiom
  use        Standard__character___axiom
  use        Standard__string___axiom
  use        Standard__integer___axiom
  use        Main__db___axiom
  use        Main__var___axiom
  use        Main__opstack___axiom
  use        Main__master_pin___axiom
  use        Main__islocked___axiom
  use        Main__p___axiom
  use        Main__command___axiom
  use        Main__number___axiom
  use        Main__enter_pin___axiom
  use        Main__enter_pin_str___axiom
  use        Main__B_3__t___axiom
  use        Main__B_3__t__aggregate_def___axiom
  use        Main__B_3__numtokens___axiom
  use        Main__B_3__L_4__i___axiom
  use        Main__B_3__B_5__tokstr___axiom
  use        Main__B_7__t___axiom
  use        Main__B_7__t__aggregate_def___axiom
  use        Main__B_7__numtokens___axiom
  use        Main__B_7__L_8__i___axiom
  use        Main__B_7__B_9__tokstr___axiom
  use        Main__B_3__L_4___axiom
  use        Main__L_2___axiom
  use        Main__B_7__L_8___axiom
  use        Main__L_6___axiom
  use        Main__L_1___axiom
  use        Stringtointeger__from_string___axiom
  use        Variablestore__database___axiom
  use        Variablestore__init___axiom
  use        Variablestore__from_string___axiom
  use        Mystringtokeniser__tokenextent___axiom
  use        Mystringtokeniser__tokenarray___axiom
  use        Mystringtokeniser__tokenise___axiom
  use        Pin__from_string___axiom
  use        Pin__pin___axiom
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__line_length__2___axiom
  use        Ada___ada__text_io__page_length__2___axiom
  use        Ada___ada__text_io__put__4___axiom
  use        Ada___ada__text_io__put_line__2___axiom
  use        Operations__plus___axiom
  use        Operations__minus___axiom
  use        Operations__multiply___axiom
  use        Operations__divide___axiom
  use        Operations__push_operation___axiom
  use        Operations__pop_operation___axiom
  use        Operations__load___axiom
  use        Operations__store___axiom
  use        Operations__remove___axiom
  use        Operations__list___axiom
  use        Variablestore__variable___axiom
  use        Operations__operandstack__storagearray___axiom
  use        Operations__operandstack__stack___axiom
  use        Operations__operandstack__init___axiom
  use        Operations__operandstack__size___axiom
  use        Operations__operandstack__stack__T13s___axiom
  use        Main__lines__mystringstr___axiom
  use        Main__lines__mystring___axiom
  use        Main__lines__to_string___axiom
  use        Main__lines__from_string___axiom
  use        Main__lines__equal___axiom
  use        Main__lines__length___axiom
  use        Main__lines__substring___axiom
  use        Main__lines__get___axiom
  use        Main__lines__get_line___axiom
  use        Main__lines__mystring__T14b___axiom
  use        Main__Tenter_pin_strS___axiom
  use        Main__TTenter_pin_strSP1___axiom
  use        Main__B_3__TtS___axiom
  use        Main__B_3__TTtSP1___axiom
  use        Main__B_3__L_4__R29b___axiom
  use        Main__B_7__TtS___axiom
  use        Main__B_7__TTtSP1___axiom
  use        Main__B_7__L_8__R44b___axiom
  
  --pp_exception_declaration NOT IMPLEMENTED
  
  --pp_exception_declaration NOT IMPLEMENTED
  
  --pp_exception_declaration NOT IMPLEMENTED
  
  --pp_exception_declaration NOT IMPLEMENTED
  
  --pp_exception_declaration NOT IMPLEMENTED
  
  --pp_exception_declaration NOT IMPLEMENTED
  
  function [GP_Subp:main.adb:16] [sloc:main.adb:16] def (__void_param : unit)
    requires { True } ensures  {  } returns
     = (* Assume dynamic invariants of inputs of the subprogram main.adb:16 *);
        (* Assume moved pointers in outputs of the subprogram main.adb:16 *);
        (* Check for RTE in the Pre of the subprogram main.adb:16 *);
        abstract ensures
        { True } begin  (let _ = True in ())  end;
        (* Assume Pre of the subprogram main.adb:16 *);
        (try
        ();
          ([sloc:main.adb:17] ());
          ([sloc:main.adb:20] assume
          { (Variablestore__database___axiom.default_initial_assumption
               !Main__db.db False) };
          assume
          { (Variablestore__database___axiom.dynamic_invariant !Main__db.db
               False False True True) });
          ([sloc:main.adb:21] ());
          ([sloc:main.adb:21] (let main__var__assume =
          ( ([sloc:main.adb:21] ([GP_Reason:VC_PRECONDITION]
                                [comment:   VAR : VariableStore.Variable := VariableStore.From_String("");                                                 ^ main.adb:21:49:VC_PRECONDITION]
                                [vc:annotation]
                                [GP_Shape:var_decl__call_from_string]
                                [GP_Sloc:main.adb:21:49]
                                [GP_Id:0] (Variablestore__from_string___axiom.from_string
                                             (let ([mlw:proxy_symbol]
                                             [introduced] temp___446) =
                                             ( (Temp___String_Literal_445.temp___String_Literal_445
                                                  ())) in
                                             (Standard__string.of_array
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___446) 1 0))))))
          in ( Main__var.var__split_fields :=
          main__var__assume.Variablestore__variable.__split_fields));
          assume
          { (Variablestore__variable___axiom.dynamic_invariant
               --pp_record_aggregate NOT IMPLEMENTED True False True True) });
          ([sloc:main.adb:22] assume
          { (Operations__operandstack__stack___axiom.default_initial_assumption
               --pp_record_aggregate NOT IMPLEMENTED False) };
          assume
          { (Operations__operandstack__stack___axiom.dynamic_invariant
               --pp_record_aggregate NOT IMPLEMENTED False False True True) });
          ([sloc:main.adb:25] assume
          { (Pin__pin___axiom.default_initial_assumption
               !Main__master_pin.master_pin False) };
          assume
          { (Pin__pin___axiom.dynamic_invariant !Main__master_pin.master_pin
               False False True True) });
          ([sloc:main.adb:28] ( Main__islocked.islocked :=
          (_gnatprove_standard.Boolean.of_int 1)));
          ([sloc:main.adb:31] ());
          ([sloc:mystring.adb:3] ());
          ([sloc:main.adb:31] ());
          ([sloc:main.adb:32] assume
          { (Main__lines__mystring___axiom.default_initial_assumption
               --pp_record_aggregate NOT IMPLEMENTED False) };
          assume
          { (Main__lines__mystring___axiom.dynamic_invariant
               --pp_record_aggregate NOT IMPLEMENTED False False True True) });
          ([sloc:main.adb:35] ());
          ([sloc:main.adb:35] (let main__command__assume =
          ( ([sloc:main.adb:35] ([GP_Reason:VC_PRECONDITION]
                                [comment:   COMMAND : Lines.MyString := Lines.From_String("");                                     ^ main.adb:35:37:VC_PRECONDITION]
                                [vc:annotation]
                                [GP_Shape:command_decl__call_from_string]
                                [GP_Sloc:main.adb:35:37]
                                [GP_Id:1] (Main__lines__from_string___axiom.from_string
                                             (let ([mlw:proxy_symbol]
                                             [introduced] temp___452) =
                                             ( (Temp___String_Literal_451.temp___String_Literal_451
                                                  ())) in
                                             (Standard__string.of_array
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___452) 1 0))))))
          in ( Main__command.command__split_fields :=
          main__command__assume.Main__lines__mystring.__split_fields));
          assume
          { (Main__lines__mystring___axiom.dynamic_invariant
               --pp_record_aggregate NOT IMPLEMENTED True False True True) });
          ([sloc:main.adb:38] ( Main__number.number := ( 0));
          assume
          { (Standard__integer___axiom.dynamic_invariant !Main__number.number
               True False True True) });
          ([sloc:main.adb:41] ());
          ([sloc:main.adb:41] ( Main__enter_pin.enter_pin :=
          ([sloc:main.adb:41] ([GP_Reason:VC_PRECONDITION] [vc:annotation]
                              [comment:   ENTER_PIN : PIN.PIN := PIN.From_String("0000");                              ^ main.adb:41:30:VC_PRECONDITION]
                              [GP_Shape:enter_pin_decl__call_from_string]
                              [GP_Id:2]
                              [GP_Sloc:main.adb:41:30] (Pin__from_string___axiom.from_string
                                                          (let ([mlw:proxy_symbol]
                                                          [introduced] temp___454)
                                                          =
                                                          ( (Temp___String_Literal_453.temp___String_Literal_453
                                                               ())) in
                                                          (Standard__string.of_array
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___454)
                                                             1 4))))));
          assume
          { (Pin__pin___axiom.dynamic_invariant !Main__enter_pin.enter_pin
               True False True True) });
          ([sloc:main.adb:42] ());
          ([sloc:main.adb:42] ( Main__enter_pin_str.enter_pin_str :=
          (let ([mlw:proxy_symbol] [introduced] temp___456) =
            ( (Temp___String_Literal_455.temp___String_Literal_455 ())) in
            ([mlw:proxy_symbol] [introduced] temp___456)));
          assume
          { (Main__Tenter_pin_strS___axiom.dynamic_invariant
               !Main__enter_pin_str.enter_pin_str True False True True) });
          ([sloc:main.adb:69] ());
          ([sloc:main.adb:66] ());
          ([sloc:main.adb:126] ());
          ([sloc:main.adb:120] ());
          ([sloc:main.adb:63] ());
          ();
          ([GP_Sloc:main.adb:48:33] ([sloc:main.adb:48] ()));
          ([GP_Sloc:main.adb:48:27] ([sloc:main.adb:48] ()));
          ([GP_Sloc:main.adb:48:27] ([sloc:main.adb:48] (let ([mlw:proxy_symbol]
                                    [introduced] temp___compl_457) =
                                    ( ( --pp_record_aggregate NOT IMPLEMENTED))
                                    in
                                    ( any --pp_effects NOT IMPLEMENTED pre {}
                                    post {} return unit);
          (Operations__operandstack__init___axiom.init
             Main__opstack.opstack__split_fields);
          ())));
        ([GP_Sloc:main.adb:49:23] ([sloc:main.adb:49] ()));
        ([GP_Sloc:main.adb:49:17] ([sloc:main.adb:49] ()));
        ([GP_Sloc:main.adb:49:17] ([sloc:main.adb:49] (let ([mlw:proxy_symbol]
                                  [introduced] temp___compl_458) =
                                  ( ( !Main__db.db)) in
                                  ( any --pp_effects NOT IMPLEMENTED pre {}
                                  post {} return unit);
        (Variablestore__init___axiom.init Main__db.db);
        ())));
    ([GP_Sloc:main.adb:51:4] ([sloc:main.adb:51] ()));
    ([GP_Sloc:main.adb:51:4] ([sloc:main.adb:51] ( any
                                                    --pp_effects NOT IMPLEMENTED
                                                    pre {}
                             post {} return unit);
    (Ada___ada__text_io__put__4___axiom.put (let ([mlw:proxy_symbol]
       [introduced] temp___460) =
       ( (Temp___String_Literal_459.temp___String_Literal_459 ())) in
       (Standard__string.of_array ([mlw:proxy_symbol]
          [introduced] temp___460) 1 9)));
    ()));
  ([GP_Sloc:main.adb:52:19] ([sloc:main.adb:52] ()));
  ([GP_Sloc:main.adb:52:9] ([sloc:main.adb:52] ()));
  ([GP_Sloc:main.adb:52:9] ([sloc:main.adb:52] (let ([mlw:proxy_symbol]
                           [introduced] temp___compl_461) =
                           ( ( --pp_record_aggregate NOT IMPLEMENTED)) in
                           ( any --pp_effects NOT IMPLEMENTED pre {} post {
                           } return unit);
  (Main__lines__get_line___axiom.get_line Main__p.p__split_fields);
  ())));
([GP_Sloc:main.adb:55:23] ([sloc:main.adb:55] ()));
([GP_Sloc:main.adb:55:12] ([sloc:main.adb:55] ()));
([GP_Sloc:main.adb:55:4] ([sloc:main.adb:55] (if
                                             ([sloc:main.adb:55] ([branch_id=954]
                                             _gnatprove_standard.Main.spark__branch
                                             :=
                                             (_gnatprove_standard.Boolean.andb
                                                (abstract ensures
                                                   { True } begin  (let _ =
                                                                  (Main__lines__to_string___axiom.to_string
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))
                                                                  in ())  end;
                                                   (Standard__string.length
                                                      (Main__lines__to_string___axiom.to_string
                                                         ( --pp_record_aggregate NOT IMPLEMENTED)))
                                                   = 4)
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___466) =
                                                (Main__lines__to_string___axiom.to_string
                                                   ( --pp_record_aggregate NOT IMPLEMENTED))
                                                in (let ([mlw:proxy_symbol]
                                                [introduced] temp___465) =
                                                ( any  pre {} post {} return
                                                  int) in
                                               (if
                                               (_gnatprove_standard.Boolean.andb
                                                  ((Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___466))
                                                     <= ([mlw:proxy_symbol]
                                                     [introduced] temp___465))
                                                  (([mlw:proxy_symbol]
                                                     [introduced] temp___465)
                                                     <= (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___466))))
                                               then
                                               abstract ensures
                                               { True } begin  (let _ =
                                                              (let i =
                                                                ( (Standard__character__rep.to_rep
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___466))
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___465))))
                                                                in
                                                                (_gnatprove_standard.Boolean.andb
                                                                   (i >= 48)
                                                                   (i <= 57)))
                                                              in ())  end
                                               ));
                                               ( any  pre {} post
                                               {((result = True) <->
                                                   (let ([mlw:proxy_symbol]
                                                   [introduced] temp___469) =
                                                   (epsilon ([mlw:proxy_symbol]
                                                   [introduced] temp___result_467) : Standard__string.string__ {
                                                   ((([mlw:proxy_symbol]
                                                       [introduced] temp___result_467)
                                                       = (Main__lines__to_string.to_string
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)))
                                                      /\
                                                      (Main__lines__to_string.to_string__function_guard
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___result_467)
                                                         ( --pp_record_aggregate NOT IMPLEMENTED)))})
                                                   in
                                                   --pp_universal_quantif NOT IMPLEMENTED))}
                                               return bool)))));
([branch_id=954] _gnatprove_standard.Main.spark__branch).bool__content then
();
([GP_Sloc:main.adb:57:7] ([sloc:main.adb:57] ()));
([GP_Sloc:main.adb:57:53] ([sloc:main.adb:57] ()));
([GP_Sloc:main.adb:57:42] ([sloc:main.adb:57] ()));
([GP_Sloc:main.adb:57:24] ([sloc:main.adb:57] ()));
([GP_Sloc:main.adb:57:18] ([sloc:main.adb:57] ( Main__master_pin.master_pin
                          :=
                          ([sloc:main.adb:57] ([GP_Reason:VC_PRECONDITION]
                                              [vc:annotation]
                                              [GP_Shape:if__master_pin_assign__call_from_string]
                                              [comment:      MASTER_PIN := PIN.From_String(Lines.To_String(P));                        ^ main.adb:57:24:VC_PRECONDITION]
                                              [GP_Sloc:main.adb:57:24]
                                              [GP_Id:3] (Pin__from_string___axiom.from_string
                                                           (Main__lines__to_string___axiom.to_string
                                                              ( --pp_record_aggregate NOT IMPLEMENTED))))))))
 else
();
([GP_Sloc:main.adb:59:7] ([sloc:main.adb:59] ()));
([GP_Sloc:main.adb:59:7] ([sloc:main.adb:59] ( any
                                                --pp_effects NOT IMPLEMENTED
                                                pre {}
                         post {} return unit);
(Ada___ada__text_io__put__4___axiom.put (let ([mlw:proxy_symbol]
   [introduced] temp___464) =
   ( (Temp___String_Literal_463.temp___String_Literal_463 ())) in
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___464) 1
      18)));
()));
([GP_Sloc:main.adb:60:7] ([sloc:main.adb:60] raise Return__exc)))));
([GP_Sloc:main.adb:63:15] ([sloc:main.adb:63] (* Translation of an Ada loop from main.adb:63 *);
                          (if (_gnatprove_standard.Boolean.of_int 1) then
                          (try
                          (let temp___loop_entry_610 =
                            --pp_record_aggregate NOT IMPLEMENTED in
                            (let temp___loop_entry_609 =
                            --pp_record_aggregate NOT IMPLEMENTED in
                            (let temp___loop_entry_608 =
                            !Main__enter_pin_str.enter_pin_str in
                            (let temp___loop_entry_607 =
                            --pp_record_aggregate NOT IMPLEMENTED in
                            (let temp___loop_entry_606 = !Main__db.db in
                            (let temp___loop_entry_605 =
                            --pp_record_aggregate NOT IMPLEMENTED in
                            (* While loop translating the Ada loop from main.adb:63 *);
                            ([sloc:main.adb:63] loop
                                                  (* Check for absence of RTE in the loop invariant and variant *)
                                                  
                                                  
                                                  (* Assume implicit invariants from the loop main.adb:63 *);
                                                  assume
                                                  { ((((((((((True /\
                                                                (Main__lines__mystring___axiom.dynamic_invariant
                                                                   --pp_record_aggregate NOT IMPLEMENTED
                                                                   True True
                                                                   True True)
                                                                /\ True /\
                                                                True) /\
                                                               (Standard__integer___axiom.dynamic_invariant
                                                                  !Main__number.number
                                                                  True True
                                                                  True True)
                                                               /\ True /\
                                                               True) /\
                                                              (Variablestore__database___axiom.dynamic_invariant
                                                                 !Main__db.db
                                                                 False True
                                                                 True True)
                                                              /\ True /\ True)
                                                             /\
                                                             (Pin__pin___axiom.dynamic_invariant
                                                                !Main__enter_pin.enter_pin
                                                                True True
                                                                True True) /\
                                                             True /\ True) /\
                                                            (Variablestore__variable___axiom.dynamic_invariant
                                                               --pp_record_aggregate NOT IMPLEMENTED
                                                               True True True
                                                               True) /\ True
                                                            /\ True) /\
                                                           (Main__Tenter_pin_strS___axiom.dynamic_invariant
                                                              !Main__enter_pin_str.enter_pin_str
                                                              True True True
                                                              True) /\ True
                                                           /\ True) /\
                                                          (Operations__operandstack__stack___axiom.dynamic_invariant
                                                             --pp_record_aggregate NOT IMPLEMENTED
                                                             False True True
                                                             True) /\ True /\
                                                          True) /\
                                                         (Pin__pin___axiom.dynamic_invariant
                                                            !Main__master_pin.master_pin
                                                            False True True
                                                            True) /\ True /\
                                                         True) /\ True /\
                                                        True /\ True) /\
                                                       (Main__lines__mystring___axiom.dynamic_invariant
                                                          --pp_record_aggregate NOT IMPLEMENTED
                                                          False True True
                                                          True) /\ True /\
                                                       True) };
                                                  (* Continuation of loop after loop invariant and variant *);
                                                  ();
                                                  ([GP_Sloc:main.adb:66:27] 
                                                  ([sloc:main.adb:66] 
                                                  (* Translation of an Ada loop from main.adb:66 *);
                                                  (if
                                                  ((_gnatprove_standard.Boolean.to_int
                                                      !Main__islocked.islocked)
                                                     = (_gnatprove_standard.Boolean.to_int
                                                          (_gnatprove_standard.Boolean.of_int
                                                             1)))
                                                  then
                                                  (try
                                                  (try
                                                    (let temp___loop_entry_515
                                                      =
                                                      --pp_record_aggregate NOT IMPLEMENTED
                                                      in
                                                      (let temp___loop_entry_514
                                                      =
                                                      !Main__enter_pin_str.enter_pin_str
                                                      in
                                                      (let temp___loop_entry_513
                                                      =
                                                      --pp_record_aggregate NOT IMPLEMENTED
                                                      in
                                                      (* While loop translating the Ada loop from main.adb:66 *);
                                                      ([sloc:main.adb:66] 
                                                      loop
                                                        (* Check for absence of RTE in the loop invariant and variant *)
                                                        
                                                        
                                                        (* Assume implicit invariants from the loop main.adb:66 *);
                                                        assume
                                                        { (_gnatprove_standard.Boolean.andb
                                                             (((((True /\
                                                                    (
                                                                    Main__lines__mystring___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                   /\
                                                                   (Pin__pin___axiom.dynamic_invariant
                                                                    !Main__enter_pin.enter_pin
                                                                    True True
                                                                    True True)
                                                                   /\ True /\
                                                                   True) /\
                                                                  (Main__Tenter_pin_strS___axiom.dynamic_invariant
                                                                    !Main__enter_pin_str.enter_pin_str
                                                                    True True
                                                                    True True)
                                                                  /\ True /\
                                                                  True) /\
                                                                 True /\ True
                                                                 /\ True) /\
                                                                (Main__lines__mystring___axiom.dynamic_invariant
                                                                   --pp_record_aggregate NOT IMPLEMENTED
                                                                   False True
                                                                   True True)
                                                                /\ True /\
                                                                True)
                                                             ((!Main__islocked.islocked
                                                                 = True) <->
                                                                True)) };
                                                        (* Continuation of loop after loop invariant and variant *);
                                                        ();
                                                        ([GP_Sloc:main.adb:67:10] 
                                                        ([sloc:main.adb:67] ()));
                                                        ([GP_Sloc:main.adb:67:10] 
                                                        ([sloc:main.adb:67] (
                                                         any
                                                          --pp_effects NOT IMPLEMENTED
                                                          pre {}
                                                        post {} return unit);
                                                        (Ada___ada__text_io__put__4___axiom.put
                                                           (let ([mlw:proxy_symbol]
                                                           [introduced] temp___471)
                                                           =
                                                           ( (Temp___String_Literal_470.temp___String_Literal_470
                                                                ())) in
                                                           (Standard__string.of_array
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___471)
                                                              1 10)));
                                                        ()));
                                                      ([GP_Sloc:main.adb:68:25] 
                                                      ([sloc:main.adb:68] ()));
                                                      ([GP_Sloc:main.adb:68:15] 
                                                      ([sloc:main.adb:68] ()));
                                                      ([GP_Sloc:main.adb:68:15] 
                                                      ([sloc:main.adb:68] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_472)
                                                      =
                                                      ( ( --pp_record_aggregate NOT IMPLEMENTED))
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      (Main__lines__get_line___axiom.get_line
                                                         Main__p.p__split_fields);
                                                      ())));
                                                      ([GP_Sloc:main.adb:70:13] 
                                                      ([sloc:main.adb:70] 
                                                      ([sloc:main.adb:70] ())));
                                                      ([GP_Sloc:main.adb:70:13] 
                                                      ([sloc:main.adb:70] 
                                                      ([sloc:main.adb:70] (
                                                      Main__B_3__t.t :=
                                                      (let ([mlw:proxy_symbol]
                                                        [introduced] temp___476)
                                                        =
                                                        ( (Main__B_3__t__aggregate_def.main__B_3__t__aggregate_def
                                                             ( --pp_record_aggregate NOT IMPLEMENTED)))
                                                        in
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___476)));
                                                      assume
                                                      { (Main__B_3__TtS___axiom.dynamic_invariant
                                                           !Main__B_3__t.t
                                                           True False True
                                                           True) })));
                                                      ([GP_Sloc:main.adb:71:13] 
                                                      ([sloc:main.adb:71] 
                                                      ([sloc:main.adb:71] assume
                                                      { (Standard__natural___axiom.default_initial_assumption
                                                           !Main__B_3__numtokens.numtokens
                                                           False) };
                                                      assume
                                                      { (Standard__natural___axiom.dynamic_invariant
                                                           !Main__B_3__numtokens.numtokens
                                                           False False True
                                                           True) })));
                                                      ([GP_Sloc:main.adb:81:16] 
                                                      ([sloc:main.adb:81] ()));
                                                      ([GP_Sloc:main.adb:80:35] 
                                                      ([sloc:main.adb:80] ()));
                                                      ([GP_Sloc:main.adb:73:56] 
                                                      ([sloc:main.adb:73] ()));
                                                      ([GP_Sloc:main.adb:73:45] 
                                                      ([sloc:main.adb:73] ()));
                                                      ([GP_Sloc:main.adb:73:59] 
                                                      ([sloc:main.adb:73] ()));
                                                      ([GP_Sloc:main.adb:73:61] 
                                                      ([sloc:main.adb:73] ()));
                                                      ([GP_Sloc:main.adb:73:30] 
                                                      ([sloc:main.adb:73] ()));
                                                      ([GP_Sloc:main.adb:73:30] 
                                                      ([sloc:main.adb:73] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_478)
                                                      =
                                                      (let ([mlw:proxy_symbol]
                                                        [introduced] temp___477)
                                                        = ( !Main__B_3__t.t)
                                                        in
                                                        (Mystringtokeniser__tokenarray.of_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___477)
                                                           Main__B_3__TTtSP1.first
                                                           Main__B_3__TTtSP1.last))
                                                      in
                                                      --pp_binding_ref NOT IMPLEMENTED)));
                                                      ([GP_Sloc:main.adb:75:16] 
                                                      ([sloc:main.adb:75] ()));
                                                      ([GP_Sloc:main.adb:75:13] 
                                                      ([sloc:main.adb:75] 
                                                      (if
                                                      ([sloc:main.adb:75] ([branch_id=1050]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (!Main__B_3__numtokens.numtokens
                                                         > 2)));
                                                      ([branch_id=1050] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      raise Temp___exception_484
                                                       else ())));
                                                      ([GP_Sloc:main.adb:80:25] 
                                                      ([sloc:main.adb:80] ()));
                                                      ([GP_Sloc:main.adb:80:25] 
                                                      ([sloc:main.adb:80] 
                                                      ([sloc:main.adb:80] (let main__B_3__L_4__R29b__assume
                                                      =
                                                      !Main__B_3__numtokens.numtokens
                                                      in assume
                                                      { (main__B_3__L_4__R29b__assume
                                                           = Main__B_3__L_4__R29b.r29b) });
                                                      assume
                                                      { (Standard__natural___axiom.dynamic_invariant
                                                           Main__B_3__L_4__R29b.r29b
                                                           True False True
                                                           True) })));
                                                      ([GP_Sloc:main.adb:80:35] 
                                                      ([sloc:main.adb:80] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___485)
                                                      = 1 in
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___486)
                                                      =
                                                      Main__B_3__L_4__R29b.r29b
                                                      in (
                                                      Main__B_3__L_4__i.i :=
                                                      ([mlw:proxy_symbol]
                                                        [introduced] temp___485));
                                                      (* Translation of an Ada loop from main.adb:80 *);
                                                      (if
                                                      (_gnatprove_standard.Boolean.andb
                                                         (([mlw:proxy_symbol]
                                                            [introduced] temp___485)
                                                            <= !Main__B_3__L_4__i.i)
                                                         (!Main__B_3__L_4__i.i
                                                            <= ([mlw:proxy_symbol]
                                                            [introduced] temp___486)))
                                                      then
                                                      (try
                                                      (try
                                                        (let temp___loop_entry_500
                                                          =
                                                          !Main__enter_pin_str.enter_pin_str
                                                          in
                                                          (let temp___loop_entry_499
                                                          =
                                                          --pp_record_aggregate NOT IMPLEMENTED
                                                          in
                                                          (* While loop translating the Ada loop from main.adb:80 *);
                                                          ([sloc:main.adb:80] 
                                                          loop
                                                            (* Check for absence of RTE in the loop invariant and variant *)
                                                            
                                                            
                                                            (* Assume implicit invariants from the loop main.adb:80 *);
                                                            assume
                                                            { (_gnatprove_standard.Boolean.andb
                                                                 ((True /\
                                                                    (Main__lines__mystring___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    /\
                                                                    (
                                                                    Main__Tenter_pin_strS___axiom.dynamic_invariant
                                                                    !Main__enter_pin_str.enter_pin_str
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                 ((1
                                                                    <= !Main__B_3__L_4__i.i)
                                                                    /\
                                                                    (
                                                                    !Main__B_3__L_4__i.i
                                                                    <= Main__B_3__L_4__R29b.r29b))) };
                                                            (* Continuation of loop after loop invariant and variant *);
                                                            ();
                                                            ([GP_Sloc:main.adb:82:70] 
                                                            ([sloc:main.adb:82] ()));
                                                            ([GP_Sloc:main.adb:82:59] 
                                                            ([sloc:main.adb:82] ()));
                                                            ([GP_Sloc:main.adb:82:43] 
                                                            ([sloc:main.adb:82] ()));
                                                            ([GP_Sloc:main.adb:82:19] 
                                                            ([sloc:main.adb:82] 
                                                            ([sloc:main.adb:82] (let main__B_3__B_5__tokstr__assume
                                                            =
                                                            (Main__lines__to_string___axiom.to_string
                                                               ( ([sloc:main.adb:82] 
                                                                 ([GP_Id:10]
                                                                 [GP_Reason:VC_PRECONDITION]
                                                                 [GP_Sloc:main.adb:82:59]
                                                                 [GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__tokstr_decl__call_to_string__call_substring]
                                                                 [vc:annotation]
                                                                 [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                           ^ main.adb:82:59:VC_PRECONDITION] (
                                                                 Main__lines__substring___axiom.substring
                                                                   ( --pp_record_aggregate NOT IMPLEMENTED)
                                                                   ( (
                                                                   Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Main__B_3__t.t
                                                                    assert
                                                                    { ([sloc:main.adb:82] 
                                                                    ([vc:annotation]
                                                                    [GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__tokstr_decl__call_to_string__call_substring__selectcomp__ixdcomp]
                                                                    [GP_Sloc:main.adb:82:74]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                          ^ main.adb:82:74:VC_INDEX_CHECK]
                                                                    [GP_Reason:VC_INDEX_CHECK]
                                                                    [GP_Id:5] (
                                                                    (Main__B_3__TTtSP1.first
                                                                    <= !Main__B_3__L_4__i.i)
                                                                    /\
                                                                    (!Main__B_3__L_4__i.i
                                                                    <= Main__B_3__TTtSP1.last)))) };
                                                                    !Main__B_3__L_4__i.i)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                                   ( 
                                                                   ([sloc:main.adb:82] 
                                                                   ([GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__tokstr_decl__call_to_string__call_substring__sub]
                                                                   [GP_Sloc:main.adb:82:105]
                                                                   [vc:annotation]
                                                                   [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                                         ^ main.adb:82:105:VC_RANGE_CHECK]
                                                                   [GP_Reason:VC_RANGE_CHECK]
                                                                   [GP_Id:9] (
                                                                   Standard__positive.range_check_
                                                                    (([sloc:main.adb:82] 
                                                                    ([vc:annotation]
                                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                             ^ main.adb:82:93:VC_OVERFLOW_CHECK]
                                                                    [GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__tokstr_decl__call_to_string__call_substring__sub__add]
                                                                    [GP_Sloc:main.adb:82:93]
                                                                    [GP_Id:8] (
                                                                    Standard__integer.range_check_
                                                                    ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Main__B_3__t.t
                                                                    assert
                                                                    { ([sloc:main.adb:82] 
                                                                    ([GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__tokstr_decl__call_to_string__call_substring__sub__add__selectcomp__ixdcomp]
                                                                    [GP_Sloc:main.adb:82:85]
                                                                    [vc:annotation]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                     ^ main.adb:82:85:VC_INDEX_CHECK]
                                                                    [GP_Reason:VC_INDEX_CHECK]
                                                                    [GP_Id:6] (
                                                                    (Main__B_3__TTtSP1.first
                                                                    <= !Main__B_3__L_4__i.i)
                                                                    /\
                                                                    (!Main__B_3__L_4__i.i
                                                                    <= Main__B_3__TTtSP1.last)))) };
                                                                    !Main__B_3__L_4__i.i)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Main__B_3__t.t
                                                                    assert
                                                                    { ([sloc:main.adb:82] 
                                                                    ([GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__tokstr_decl__call_to_string__call_substring__sub__add__selectcomp__ixdcomp]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                                ^ main.adb:82:96:VC_INDEX_CHECK]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_INDEX_CHECK]
                                                                    [GP_Id:7]
                                                                    [GP_Sloc:main.adb:82:96] (
                                                                    (Main__B_3__TTtSP1.first
                                                                    <= !Main__B_3__L_4__i.i)
                                                                    /\
                                                                    (!Main__B_3__L_4__i.i
                                                                    <= Main__B_3__TTtSP1.last)))) };
                                                                    !Main__B_3__L_4__i.i)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                    - 1))))))))))
                                                            in (
                                                            Main__B_3__B_5__tokstr.tokstr
                                                            :=
                                                            (Standard__string.to_array
                                                               main__B_3__B_5__tokstr__assume));
                                                            assume
                                                            { ((Standard__integer__rep.to_rep
                                                                  Main__B_3__B_5__tokstr.tokstr__first)
                                                                 = (Standard__string.first
                                                                    main__B_3__B_5__tokstr__assume)) };
                                                            assume
                                                            { ((Standard__integer__rep.to_rep
                                                                  Main__B_3__B_5__tokstr.tokstr__last)
                                                                 = (Standard__string.last
                                                                    main__B_3__B_5__tokstr__assume)) });
                                                            assume
                                                            { (Standard__string___axiom.dynamic_invariant
                                                                 (Standard__string.of_array
                                                                    !Main__B_3__B_5__tokstr.tokstr
                                                                    (
                                                                    Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                    (
                                                                    Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))
                                                                 True False
                                                                 True True) })));
                                                            ([GP_Sloc:main.adb:84:19] 
                                                            ([sloc:main.adb:84] 
                                                            (if
                                                            ([sloc:main.adb:84] ([branch_id=1099]
                                                            _gnatprove_standard.Main.spark__branch
                                                            :=
                                                            (!Main__B_3__L_4__i.i
                                                               = 1)));
                                                            ([branch_id=1099] _gnatprove_standard.Main.spark__branch).bool__content
                                                            then
                                                            ();
                                                            ([GP_Sloc:main.adb:86:22] 
                                                            ([sloc:main.adb:86] ()));
                                                            ([GP_Sloc:main.adb:86:51] 
                                                            ([sloc:main.adb:86] ()));
                                                            ([GP_Sloc:main.adb:86:38] 
                                                            ([sloc:main.adb:86] ()));
                                                            ([GP_Sloc:main.adb:86:30] 
                                                            ([sloc:main.adb:86] (let ([mlw:proxy_symbol]
                                                            [introduced] temp___488)
                                                            =
                                                            ( ([sloc:main.adb:86] 
                                                              ([GP_Id:11]
                                                              [GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__if__command_assign__call_from_string]
                                                              [vc:annotation]
                                                              [GP_Sloc:main.adb:86:38]
                                                              [comment:                     COMMAND := Lines.From_String(TokStr);                                      ^ main.adb:86:38:VC_PRECONDITION] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (Standard__string.of_array
                                                                   !Main__B_3__B_5__tokstr.tokstr
                                                                   (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                   (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))))))
                                                            in (
                                                            Main__command.command__split_fields
                                                            :=
                                                            ([mlw:proxy_symbol]
                                                              [introduced] temp___488).Main__lines__mystring.__split_fields))))
                                                             else ())));
                                                            ([GP_Sloc:main.adb:88:19] 
                                                            ([sloc:main.adb:88] 
                                                            (if
                                                            ([sloc:main.adb:88] ([branch_id=1110]
                                                            _gnatprove_standard.Main.spark__branch
                                                            :=
                                                            (!Main__B_3__L_4__i.i
                                                               = 2)));
                                                            ([branch_id=1110] _gnatprove_standard.Main.spark__branch).bool__content
                                                            then
                                                            ();
                                                            ([GP_Sloc:main.adb:90:25] 
                                                            ([sloc:main.adb:90] ()));
                                                            ([GP_Sloc:main.adb:90:22] 
                                                            ([sloc:main.adb:90] 
                                                            (if
                                                            ([sloc:main.adb:90] ([branch_id=1114]
                                                            _gnatprove_standard.Main.spark__branch
                                                            :=
                                                            (_gnatprove_standard.Boolean.andb
                                                               (abstract
                                                                  ensures
                                                                  { True } begin 
                                                                   (let _ =
                                                                  (Standard__string.of_array
                                                                    !Main__B_3__B_5__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))
                                                                  in ())  end;
                                                                  (_gnatprove_standard.Integer.length
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))
                                                                  = 4)
                                                               (let ([mlw:proxy_symbol]
                                                               [introduced] temp___496)
                                                               =
                                                               (Standard__string.of_array
                                                                  !Main__B_3__B_5__tokstr.tokstr
                                                                  (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                  (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))
                                                               in
                                                               (let ([mlw:proxy_symbol]
                                                               [introduced] temp___495)
                                                               =
                                                               ( any  pre {}
                                                                 post {
                                                                 } return
                                                                 int) in
                                                              (if
                                                              (_gnatprove_standard.Boolean.andb
                                                                 ((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___496))
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___495))
                                                                 (([mlw:proxy_symbol]
                                                                    [introduced] temp___495)
                                                                    <= (
                                                                    Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___496))))
                                                              then
                                                              abstract
                                                              ensures
                                                              { True } begin 
                                                               (let _ =
                                                              (let i =
                                                                ( (Standard__character__rep.to_rep
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___496))
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___495))))
                                                                in
                                                                (_gnatprove_standard.Boolean.andb
                                                                   (i >= 48)
                                                                   (i <= 57)))
                                                              in ())  end ));
                                                              ( any  pre {}
                                                              post
                                                              {((result
                                                                   = True)
                                                                  <->
                                                                  (let ([mlw:proxy_symbol]
                                                                  [introduced] temp___498)
                                                                  =
                                                                  (Standard__string.of_array
                                                                    !Main__B_3__B_5__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))
                                                                  in
                                                                  --pp_universal_quantif NOT IMPLEMENTED))}
                                                              return bool)))));
                                                            ([branch_id=1114] _gnatprove_standard.Main.spark__branch).bool__content
                                                            then
                                                            ();
                                                            ([GP_Sloc:main.adb:93:25] 
                                                            ([sloc:main.adb:93] ()));
                                                            ([GP_Sloc:main.adb:93:42] 
                                                            ([sloc:main.adb:93] ()));
                                                            ([GP_Sloc:main.adb:93:39] 
                                                            ([sloc:main.adb:93] (
                                                            Main__enter_pin_str.enter_pin_str
                                                            :=
                                                            (let ([mlw:proxy_symbol]
                                                              [introduced] temp___490)
                                                              =
                                                              (Standard__string.of_array
                                                                 !Main__B_3__B_5__tokstr.tokstr
                                                                 (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__first)
                                                                 (Standard__integer__rep.to_rep
                                                                    Main__B_3__B_5__tokstr.tokstr__last))
                                                              in
                                                              (let ([mlw:proxy_symbol]
                                                              [introduced] temp___491)
                                                              =
                                                              ( (Array__Int__Standard__character.slide
                                                                   (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___490))
                                                                   (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___490))
                                                                   Main__TTenter_pin_strSP1.first))
                                                              in assert
                                                              { ([sloc:main.adb:93] 
                                                                ([GP_Id:12]
                                                                [GP_Shape:L_1_while__L_2_while__B_3_declblk__L_4_while__B_5_declblk__if__if__enter_pin_str_assign]
                                                                [comment:                        ENTER_PIN_STR := TokStr;                                          ^ main.adb:93:42:VC_LENGTH_CHECK]
                                                                [vc:annotation]
                                                                [GP_Sloc:main.adb:93:42]
                                                                [GP_Reason:VC_LENGTH_CHECK] (
                                                                True /\
                                                                  (if
                                                                  ((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___490))
                                                                    <= (
                                                                    Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___490)))
                                                                  then
                                                                  ((Main__TTenter_pin_strSP1.first
                                                                    <= Main__TTenter_pin_strSP1.last)
                                                                    /\
                                                                    (((Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___490))
                                                                    - (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___490)))
                                                                    = (Main__TTenter_pin_strSP1.last
                                                                    - Main__TTenter_pin_strSP1.first)))
                                                                   else
                                                                  (Main__TTenter_pin_strSP1.last
                                                                    < Main__TTenter_pin_strSP1.first))))) };
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___491))))))
                                                             else
                                                            raise Temp___exception_494)))
                                                             else ())));
                                                          (* Check for the exit condition and loop statements appearing before the loop invariant of loop main.adb:80 *);
                                                          (if
                                                          (!Main__B_3__L_4__i.i
                                                             = ([mlw:proxy_symbol]
                                                             [introduced] temp___486))
                                                          then
                                                          raise Main__B_3__L_4.L_4
                                                          );
                                                          ([sloc:main.adb:80] (
                                                          Main__B_3__L_4__i.i
                                                          :=
                                                          (!Main__B_3__L_4__i.i
                                                             + 1)))
                                                           end loop))) with
                                                      | Temp___exception_494 
                                                      ->
                                                      ();
                                                      ([GP_Sloc:main.adb:95:25] 
                                                      ([sloc:main.adb:95] ()));
                                                      ([GP_Sloc:main.adb:95:25] 
                                                      ([sloc:main.adb:95] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put__4___axiom.put
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___493)
                                                         =
                                                         ( (Temp___String_Literal_492.temp___String_Literal_492
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___493)
                                                            1 64)));
                                                      ()));
                                                      ([GP_Sloc:main.adb:96:25] 
                                                      ([sloc:main.adb:96] raise Return__exc))) with
                                                      | Main__B_3__L_4.L_4 
                                                      -> ()) )))));
                                                  ([GP_Sloc:main.adb:104:66] 
                                                  ([sloc:main.adb:104] ()));
                                                  ([GP_Sloc:main.adb:104:25] 
                                                  ([sloc:main.adb:104] ()));
                                                  ([GP_Sloc:main.adb:104:38] 
                                                  ([sloc:main.adb:104] ()));
                                                  ([GP_Sloc:main.adb:104:18] 
                                                  ([sloc:main.adb:104] ()));
                                                  ([GP_Sloc:main.adb:104:10] 
                                                  ([sloc:main.adb:104] 
                                                  (if
                                                  ([sloc:main.adb:104] ([branch_id=1142]
                                                  _gnatprove_standard.Main.spark__branch
                                                  :=
                                                  (_gnatprove_standard.Boolean.andb
                                                     (_gnatprove_standard.Boolean.andb
                                                        (Main__lines__equal___axiom.equal
                                                           ( --pp_record_aggregate NOT IMPLEMENTED)
                                                           ( ([sloc:main.adb:104] 
                                                             ([GP_Shape:L_1_while__L_2_while__if__and__and__call_equal__call_from_string]
                                                             [GP_Reason:VC_PRECONDITION]
                                                             [GP_Id:14]
                                                             [comment:         if Lines.Equal(COMMAND,Lines.From_String("unlock")) and IsLocked and                                       ^ main.adb:104:38:VC_PRECONDITION]
                                                             [vc:annotation]
                                                             [GP_Sloc:main.adb:104:38] (
                                                             Main__lines__from_string___axiom.from_string
                                                               (let ([mlw:proxy_symbol]
                                                               [introduced] temp___510)
                                                               =
                                                               ( (Temp___String_Literal_509.temp___String_Literal_509
                                                                    ())) in
                                                               (Standard__string.of_array
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___510)
                                                                  1 6)))))))
                                                        !Main__islocked.islocked)
                                                     (let ([mlw:proxy_symbol]
                                                     [introduced] temp___511)
                                                     =
                                                     ( any  pre {} post {
                                                       } return int) in
                                                    (if
                                                    (_gnatprove_standard.Boolean.andb
                                                       (Main__TTenter_pin_strSP1.first
                                                          <= ([mlw:proxy_symbol]
                                                          [introduced] temp___511))
                                                       (([mlw:proxy_symbol]
                                                          [introduced] temp___511)
                                                          <= Main__TTenter_pin_strSP1.last))
                                                    then
                                                    abstract ensures
                                                    { True } begin  (let _ =
                                                                   (let i =
                                                                    ( (
                                                                    Standard__character__rep.to_rep
                                                                    (Array__Int__Standard__character.get
                                                                    !Main__enter_pin_str.enter_pin_str
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___511))))
                                                                    in
                                                                    (_gnatprove_standard.Boolean.andb
                                                                    (i >= 48)
                                                                    (i <= 57)))
                                                                   in ())  end
                                                    ));
                                                    ( any  pre {} post
                                                    {((result = True) <->
                                                        --pp_universal_quantif NOT IMPLEMENTED)}
                                                    return bool))));
                                                  ([branch_id=1142] _gnatprove_standard.Main.spark__branch).bool__content
                                                  then
                                                  ();
                                                  ([GP_Sloc:main.adb:106:13] 
                                                  ([sloc:main.adb:106] ()));
                                                  ([GP_Sloc:main.adb:106:42] 
                                                  ([sloc:main.adb:106] ()));
                                                  ([GP_Sloc:main.adb:106:29] 
                                                  ([sloc:main.adb:106] ()));
                                                  ([GP_Sloc:main.adb:106:23] 
                                                  ([sloc:main.adb:106] (
                                                  Main__enter_pin.enter_pin
                                                  :=
                                                  ([sloc:main.adb:106] 
                                                  ([GP_Id:13]
                                                  [GP_Reason:VC_PRECONDITION]
                                                  [comment:            ENTER_PIN := PIN.From_String(ENTER_PIN_STR);                             ^ main.adb:106:29:VC_PRECONDITION]
                                                  [vc:annotation]
                                                  [GP_Shape:L_1_while__L_2_while__if__enter_pin_assign__call_from_string]
                                                  [GP_Sloc:main.adb:106:29] (
                                                  Pin__from_string___axiom.from_string
                                                    (let ([mlw:proxy_symbol]
                                                    [introduced] temp___502)
                                                    =
                                                    ( !Main__enter_pin_str.enter_pin_str)
                                                    in
                                                    (Standard__string.of_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___502)
                                                       Main__TTenter_pin_strSP1.first
                                                       Main__TTenter_pin_strSP1.last))))))));
                                                  ([GP_Sloc:main.adb:108:13] 
                                                  ([sloc:main.adb:108] 
                                                  (if
                                                  ([sloc:main.adb:108] ([branch_id=1175]
                                                  _gnatprove_standard.Main.spark__branch
                                                  :=
                                                  (!Main__master_pin.master_pin
                                                     = !Main__enter_pin.enter_pin)));
                                                  ([branch_id=1175] _gnatprove_standard.Main.spark__branch).bool__content
                                                  then
                                                  ();
                                                  ([GP_Sloc:main.adb:109:16] 
                                                  ([sloc:main.adb:109] ()));
                                                  ([GP_Sloc:main.adb:109:25] 
                                                  ([sloc:main.adb:109] (
                                                  Main__islocked.islocked :=
                                                  (_gnatprove_standard.Boolean.of_int
                                                     0))))
                                                   else
                                                  raise Temp___exception_506)))
                                                   else
                                                  ();
                                                  ([GP_Sloc:main.adb:115:13] 
                                                  ([sloc:main.adb:115] ()));
                                                  ([GP_Sloc:main.adb:115:13] 
                                                  ([sloc:main.adb:115] (
                                                   any
                                                    --pp_effects NOT IMPLEMENTED
                                                    pre {}
                                                  post {} return unit);
                                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                                     (let ([mlw:proxy_symbol]
                                                     [introduced] temp___508)
                                                     =
                                                     ( (Temp___String_Literal_507.temp___String_Literal_507
                                                          ())) in
                                                     (Standard__string.of_array
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___508)
                                                        1 58)));
                                                  ())))));
                                                  (* Check for the exit condition and loop statements appearing before the loop invariant of loop main.adb:66 *);
                                                  (if
                                                  --pp_not NOT IMPLEMENTED
                                                  then raise Main__L_2.L_2 )
                                                   end loop)))) with
                          | Temp___exception_484  ->
                          ();
                          ([GP_Sloc:main.adb:76:16] ([sloc:main.adb:76] ()));
                          ([GP_Sloc:main.adb:76:16] ([sloc:main.adb:76] (
                                                     any
                                                      --pp_effects NOT IMPLEMENTED
                                                      pre {}
                                                    post {} return unit);
                          (Ada___ada__text_io__put_line__2___axiom.put_line
                             (let ([mlw:proxy_symbol]
                             [introduced] temp___483) =
                             ( (Temp___String_Literal_482.temp___String_Literal_482
                                  ())) in
                             (Standard__string.of_array ([mlw:proxy_symbol]
                                [introduced] temp___483) 1 36)));
                          ()));
                          ([GP_Sloc:main.adb:77:16] ([sloc:main.adb:77] raise Return__exc))
                          | Temp___exception_506  ->
                          ();
                          ([GP_Sloc:main.adb:111:16] ([sloc:main.adb:111] ()));
                          ([GP_Sloc:main.adb:111:16] ([sloc:main.adb:111] (
                                                      any
                                                       --pp_effects NOT IMPLEMENTED
                                                       pre {}
                                                     post {} return unit);
                          (Ada___ada__text_io__put_line__2___axiom.put_line
                             (let ([mlw:proxy_symbol]
                             [introduced] temp___505) =
                             ( (Temp___String_Literal_504.temp___String_Literal_504
                                  ())) in
                             (Standard__string.of_array ([mlw:proxy_symbol]
                                [introduced] temp___505) 1 23)));
                          ()));
                          ([GP_Sloc:main.adb:112:16] ([sloc:main.adb:112] raise Return__exc))) with
| Main__L_2.L_2  -> ())
)));
([GP_Sloc:main.adb:120:30] ([sloc:main.adb:120] (* Translation of an Ada loop from main.adb:120 *);
                           (if
                           ((_gnatprove_standard.Boolean.to_int
                               !Main__islocked.islocked)
                              = (_gnatprove_standard.Boolean.to_int
                                   (_gnatprove_standard.Boolean.of_int 0)))
                           then
                           (try
                           (try
                             (let temp___loop_entry_604 =
                               --pp_record_aggregate NOT IMPLEMENTED in
                               (let temp___loop_entry_603 =
                               --pp_record_aggregate NOT IMPLEMENTED in
                               (let temp___loop_entry_602 =
                               --pp_record_aggregate NOT IMPLEMENTED in
                               (let temp___loop_entry_601 = !Main__db.db in
                               (let temp___loop_entry_600 =
                               --pp_record_aggregate NOT IMPLEMENTED in
                               (* While loop translating the Ada loop from main.adb:120 *);
                               ([sloc:main.adb:120] loop
                                                      (* Check for absence of RTE in the loop invariant and variant *)
                                                      
                                                      
                                                      (* Assume implicit invariants from the loop main.adb:120 *);
                                                      assume
                                                      { (_gnatprove_standard.Boolean.andb
                                                           (((((((((True /\
                                                                    (Main__lines__mystring___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    /\
                                                                    (Standard__integer___axiom.dynamic_invariant
                                                                    !Main__number.number
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    /\
                                                                    (
                                                                    Variablestore__database___axiom.dynamic_invariant
                                                                    !Main__db.db
                                                                    False
                                                                    True True
                                                                    True) /\
                                                                    True /\
                                                                    True) /\
                                                                   (Pin__pin___axiom.dynamic_invariant
                                                                    !Main__enter_pin.enter_pin
                                                                    True True
                                                                    True True)
                                                                   /\ True /\
                                                                   True) /\
                                                                  (Variablestore__variable___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    True True
                                                                    True True)
                                                                  /\ True /\
                                                                  True) /\
                                                                 (Operations__operandstack__stack___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    False
                                                                    True True
                                                                    True) /\
                                                                 True /\ True)
                                                                /\
                                                                (Pin__pin___axiom.dynamic_invariant
                                                                   !Main__master_pin.master_pin
                                                                   False True
                                                                   True True)
                                                                /\ True /\
                                                                True) /\ True
                                                               /\ True /\
                                                               True) /\
                                                              (Main__lines__mystring___axiom.dynamic_invariant
                                                                 --pp_record_aggregate NOT IMPLEMENTED
                                                                 False True
                                                                 True True)
                                                              /\ True /\ True)
                                                           ((!Main__islocked.islocked
                                                               = True) <->
                                                              False)) };
                                                      (* Continuation of loop after loop invariant and variant *);
                                                      ();
                                                      ([GP_Sloc:main.adb:124:10] 
                                                      ([sloc:main.adb:124] ()));
                                                      ([GP_Sloc:main.adb:124:10] 
                                                      ([sloc:main.adb:124] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put__4___axiom.put
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___517)
                                                         =
                                                         ( (Temp___String_Literal_516.temp___String_Literal_516
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___517)
                                                            1 10)));
                                                      ()));
                               ([GP_Sloc:main.adb:125:25] ([sloc:main.adb:125] ()));
                               ([GP_Sloc:main.adb:125:15] ([sloc:main.adb:125] ()));
                               ([GP_Sloc:main.adb:125:15] ([sloc:main.adb:125] (let ([mlw:proxy_symbol]
                                                          [introduced] temp___compl_518)
                                                          =
                                                          ( ( --pp_record_aggregate NOT IMPLEMENTED))
                                                          in
                                                          ( any
                                                             --pp_effects NOT IMPLEMENTED
                                                             pre {}
                                                          post {} return
                                                          unit);
                               (Main__lines__get_line___axiom.get_line
                                  Main__p.p__split_fields);
                               ())));
                               ([GP_Sloc:main.adb:127:13] ([sloc:main.adb:127] 
                                                          ([sloc:main.adb:127] ())));
                               ([GP_Sloc:main.adb:127:13] ([sloc:main.adb:127] 
                                                          ([sloc:main.adb:127] (
                                                          Main__B_7__t.t :=
                                                          (let ([mlw:proxy_symbol]
                                                            [introduced] temp___522)
                                                            =
                                                            ( (Main__B_7__t__aggregate_def.main__B_7__t__aggregate_def
                                                                 ( --pp_record_aggregate NOT IMPLEMENTED)))
                                                            in
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___522)));
                                                          assume
                                                          { (Main__B_7__TtS___axiom.dynamic_invariant
                                                               !Main__B_7__t.t
                                                               True False
                                                               True True) })));
                               ([GP_Sloc:main.adb:128:13] ([sloc:main.adb:128] 
                                                          ([sloc:main.adb:128] assume
                                                          { (Standard__natural___axiom.default_initial_assumption
                                                               !Main__B_7__numtokens.numtokens
                                                               False) };
                                                          assume
                                                          { (Standard__natural___axiom.dynamic_invariant
                                                               !Main__B_7__numtokens.numtokens
                                                               False False
                                                               True True) })));
                               ([GP_Sloc:main.adb:140:16] ([sloc:main.adb:140] ()));
                               ([GP_Sloc:main.adb:139:35] ([sloc:main.adb:139] ()));
                               ([GP_Sloc:main.adb:131:56] ([sloc:main.adb:131] ()));
                               ([GP_Sloc:main.adb:131:45] ([sloc:main.adb:131] ()));
                               ([GP_Sloc:main.adb:131:59] ([sloc:main.adb:131] ()));
                               ([GP_Sloc:main.adb:131:61] ([sloc:main.adb:131] ()));
                               ([GP_Sloc:main.adb:131:30] ([sloc:main.adb:131] ()));
                               ([GP_Sloc:main.adb:131:30] ([sloc:main.adb:131] (let ([mlw:proxy_symbol]
                                                          [introduced] temp___compl_524)
                                                          =
                                                          (let ([mlw:proxy_symbol]
                                                            [introduced] temp___523)
                                                            =
                                                            ( !Main__B_7__t.t)
                                                            in
                                                            (Mystringtokeniser__tokenarray.of_array
                                                               ([mlw:proxy_symbol]
                                                               [introduced] temp___523)
                                                               Main__B_7__TTtSP1.first
                                                               Main__B_7__TTtSP1.last))
                                                          in
                                                          --pp_binding_ref NOT IMPLEMENTED)));
                               ([GP_Sloc:main.adb:133:16] ([sloc:main.adb:133] ()));
                               ([GP_Sloc:main.adb:133:13] ([sloc:main.adb:133] 
                                                          (if
                                                          ([sloc:main.adb:133] ([branch_id=1244]
                                                          _gnatprove_standard.Main.spark__branch
                                                          :=
                                                          (!Main__B_7__numtokens.numtokens
                                                             > 2)));
                                                          ([branch_id=1244] _gnatprove_standard.Main.spark__branch).bool__content
                                                          then
                                                          raise Temp___exception_530
                                                           else ())));
                               ([GP_Sloc:main.adb:139:25] ([sloc:main.adb:139] ()));
                               ([GP_Sloc:main.adb:139:25] ([sloc:main.adb:139] 
                                                          ([sloc:main.adb:139] (let main__B_7__L_8__R44b__assume
                                                          =
                                                          !Main__B_7__numtokens.numtokens
                                                          in assume
                                                          { (main__B_7__L_8__R44b__assume
                                                               = Main__B_7__L_8__R44b.r44b) });
                                                          assume
                                                          { (Standard__natural___axiom.dynamic_invariant
                                                               Main__B_7__L_8__R44b.r44b
                                                               True False
                                                               True True) })));
                               ([GP_Sloc:main.adb:139:35] ([sloc:main.adb:139] (let ([mlw:proxy_symbol]
                                                          [introduced] temp___531)
                                                          = 1 in
                                                          (let ([mlw:proxy_symbol]
                                                          [introduced] temp___532)
                                                          =
                                                          Main__B_7__L_8__R44b.r44b
                                                          in (
                                                          Main__B_7__L_8__i.i
                                                          :=
                                                          ([mlw:proxy_symbol]
                                                            [introduced] temp___531));
                                                          (* Translation of an Ada loop from main.adb:139 *);
                                                          (if
                                                          (_gnatprove_standard.Boolean.andb
                                                             (([mlw:proxy_symbol]
                                                                [introduced] temp___531)
                                                                <= !Main__B_7__L_8__i.i)
                                                             (!Main__B_7__L_8__i.i
                                                                <= ([mlw:proxy_symbol]
                                                                [introduced] temp___532)))
                                                          then
                                                          (try
                                                          (try
                                                            (let temp___loop_entry_552
                                                              =
                                                              --pp_record_aggregate NOT IMPLEMENTED
                                                              in
                                                              (let temp___loop_entry_551
                                                              =
                                                              --pp_record_aggregate NOT IMPLEMENTED
                                                              in
                                                              (* While loop translating the Ada loop from main.adb:139 *);
                                                              ([sloc:main.adb:139] 
                                                              loop
                                                                (* Check for absence of RTE in the loop invariant and variant *)
                                                                
                                                                
                                                                (* Assume implicit invariants from the loop main.adb:139 *);
                                                                assume
                                                                { (_gnatprove_standard.Boolean.andb
                                                                    ((((True
                                                                    /\
                                                                    (Main__lines__mystring___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    /\
                                                                    (Standard__integer___axiom.dynamic_invariant
                                                                    !Main__number.number
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    /\
                                                                    (Pin__pin___axiom.dynamic_invariant
                                                                    !Main__enter_pin.enter_pin
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    /\
                                                                    (Variablestore__variable___axiom.dynamic_invariant
                                                                    --pp_record_aggregate NOT IMPLEMENTED
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    ((1
                                                                    <= !Main__B_7__L_8__i.i)
                                                                    /\
                                                                    (!Main__B_7__L_8__i.i
                                                                    <= Main__B_7__L_8__R44b.r44b))) };
                                                                (* Continuation of loop after loop invariant and variant *);
                                                                ();
                                                                ([GP_Sloc:main.adb:141:70] 
                                                                ([sloc:main.adb:141] ()));
                                                                ([GP_Sloc:main.adb:141:59] 
                                                                ([sloc:main.adb:141] ()));
                                                                ([GP_Sloc:main.adb:141:43] 
                                                                ([sloc:main.adb:141] ()));
                                                                ([GP_Sloc:main.adb:141:19] 
                                                                ([sloc:main.adb:141] 
                                                                ([sloc:main.adb:141] (let main__B_7__B_9__tokstr__assume
                                                                =
                                                                (Main__lines__to_string___axiom.to_string
                                                                   ( 
                                                                   ([sloc:main.adb:141] 
                                                                   ([comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                           ^ main.adb:141:59:VC_PRECONDITION]
                                                                   [GP_Reason:VC_PRECONDITION]
                                                                   [vc:annotation]
                                                                   [GP_Id:21]
                                                                   [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__tokstr_decl__call_to_string__call_substring]
                                                                   [GP_Sloc:main.adb:141:59] (
                                                                   Main__lines__substring___axiom.substring
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED)
                                                                    ( (
                                                                    Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Main__B_7__t.t
                                                                    assert
                                                                    { ([sloc:main.adb:141] 
                                                                    ([GP_Id:16]
                                                                    [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__tokstr_decl__call_to_string__call_substring__selectcomp__ixdcomp]
                                                                    [GP_Sloc:main.adb:141:74]
                                                                    [vc:annotation]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                          ^ main.adb:141:74:VC_INDEX_CHECK]
                                                                    [GP_Reason:VC_INDEX_CHECK] (
                                                                    (Main__B_7__TTtSP1.first
                                                                    <= !Main__B_7__L_8__i.i)
                                                                    /\
                                                                    (!Main__B_7__L_8__i.i
                                                                    <= Main__B_7__TTtSP1.last)))) };
                                                                    !Main__B_7__L_8__i.i)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                                    ( 
                                                                    ([sloc:main.adb:141] 
                                                                    ([vc:annotation]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                                         ^ main.adb:141:105:VC_RANGE_CHECK]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Sloc:main.adb:141:105]
                                                                    [GP_Id:20]
                                                                    [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__tokstr_decl__call_to_string__call_substring__sub] (
                                                                    Standard__positive.range_check_
                                                                    (([sloc:main.adb:141] 
                                                                    ([GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__tokstr_decl__call_to_string__call_substring__sub__add]
                                                                    [GP_Id:19]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                                    [GP_Sloc:main.adb:141:93]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                             ^ main.adb:141:93:VC_OVERFLOW_CHECK] (
                                                                    Standard__integer.range_check_
                                                                    ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Main__B_7__t.t
                                                                    assert
                                                                    { ([sloc:main.adb:141] 
                                                                    ([GP_Sloc:main.adb:141:85]
                                                                    [GP_Id:17]
                                                                    [vc:annotation]
                                                                    [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__tokstr_decl__call_to_string__call_substring__sub__add__selectcomp__ixdcomp]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                     ^ main.adb:141:85:VC_INDEX_CHECK]
                                                                    [GP_Reason:VC_INDEX_CHECK] (
                                                                    (Main__B_7__TTtSP1.first
                                                                    <= !Main__B_7__L_8__i.i)
                                                                    /\
                                                                    (!Main__B_7__L_8__i.i
                                                                    <= Main__B_7__TTtSP1.last)))) };
                                                                    !Main__B_7__L_8__i.i)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Main__B_7__t.t
                                                                    assert
                                                                    { ([sloc:main.adb:141] 
                                                                    ([GP_Id:18]
                                                                    [vc:annotation]
                                                                    [comment:                  TokStr : String := Lines.To_String(Lines.Substring(P,T(I).Start,T(I).Start+T(I).Length-1));                                                                                                ^ main.adb:141:96:VC_INDEX_CHECK]
                                                                    [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__tokstr_decl__call_to_string__call_substring__sub__add__selectcomp__ixdcomp]
                                                                    [GP_Reason:VC_INDEX_CHECK]
                                                                    [GP_Sloc:main.adb:141:96] (
                                                                    (Main__B_7__TTtSP1.first
                                                                    <= !Main__B_7__L_8__i.i)
                                                                    /\
                                                                    (!Main__B_7__L_8__i.i
                                                                    <= Main__B_7__TTtSP1.last)))) };
                                                                    !Main__B_7__L_8__i.i)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                    - 1))))))))))
                                                                in (
                                                                Main__B_7__B_9__tokstr.tokstr
                                                                :=
                                                                (Standard__string.to_array
                                                                   main__B_7__B_9__tokstr__assume));
                                                                assume
                                                                { ((Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    = (
                                                                    Standard__string.first
                                                                    main__B_7__B_9__tokstr__assume)) };
                                                                assume
                                                                { ((Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last)
                                                                    = (
                                                                    Standard__string.last
                                                                    main__B_7__B_9__tokstr__assume)) });
                                                                assume
                                                                { (Standard__string___axiom.dynamic_invariant
                                                                    (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))
                                                                    True
                                                                    False
                                                                    True True) })));
                                                                ([GP_Sloc:main.adb:143:19] 
                                                                ([sloc:main.adb:143] 
                                                                (if
                                                                ([sloc:main.adb:143] ([branch_id=1293]
                                                                _gnatprove_standard.Main.spark__branch
                                                                :=
                                                                (!Main__B_7__L_8__i.i
                                                                   = 1)));
                                                                ([branch_id=1293] _gnatprove_standard.Main.spark__branch).bool__content
                                                                then
                                                                ();
                                                                ([GP_Sloc:main.adb:145:22] 
                                                                ([sloc:main.adb:145] ()));
                                                                ([GP_Sloc:main.adb:145:51] 
                                                                ([sloc:main.adb:145] ()));
                                                                ([GP_Sloc:main.adb:145:38] 
                                                                ([sloc:main.adb:145] ()));
                                                                ([GP_Sloc:main.adb:145:30] 
                                                                ([sloc:main.adb:145] (let ([mlw:proxy_symbol]
                                                                [introduced] temp___534)
                                                                =
                                                                ( ([sloc:main.adb:145] 
                                                                  ([GP_Reason:VC_PRECONDITION]
                                                                  [comment:                     COMMAND := Lines.From_String(TokStr);                                      ^ main.adb:145:38:VC_PRECONDITION]
                                                                  [GP_Sloc:main.adb:145:38]
                                                                  [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__if__command_assign__call_from_string]
                                                                  [vc:annotation]
                                                                  [GP_Id:22] (
                                                                  Main__lines__from_string___axiom.from_string
                                                                    (
                                                                    Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))))))
                                                                in (
                                                                Main__command.command__split_fields
                                                                :=
                                                                ([mlw:proxy_symbol]
                                                                  [introduced] temp___534).Main__lines__mystring.__split_fields))))
                                                                 else 
                                                                ())));
                                                                ([GP_Sloc:main.adb:147:19] 
                                                                ([sloc:main.adb:147] 
                                                                (if
                                                                ([sloc:main.adb:147] ([branch_id=1304]
                                                                _gnatprove_standard.Main.spark__branch
                                                                :=
                                                                (!Main__B_7__L_8__i.i
                                                                   = 2)));
                                                                ([branch_id=1304] _gnatprove_standard.Main.spark__branch).bool__content
                                                                then
                                                                ();
                                                                ([GP_Sloc:main.adb:149:22] 
                                                                ([sloc:main.adb:149] ()));
                                                                ([GP_Sloc:main.adb:149:60] 
                                                                ([sloc:main.adb:149] ()));
                                                                ([GP_Sloc:main.adb:149:47] 
                                                                ([sloc:main.adb:149] ()));
                                                                ([GP_Sloc:main.adb:149:29] 
                                                                ([sloc:main.adb:149] (
                                                                Main__number.number
                                                                :=
                                                                (Stringtointeger__from_string___axiom.from_string
                                                                   (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))))));
                                                                ([GP_Sloc:main.adb:152:25] 
                                                                ([sloc:main.adb:152] ()));
                                                                ([GP_Sloc:main.adb:152:22] 
                                                                ([sloc:main.adb:152] 
                                                                (if
                                                                ([sloc:main.adb:152] ([branch_id=1315]
                                                                _gnatprove_standard.Main.spark__branch
                                                                :=
                                                                (([sloc:main.adb:152] 
                                                                 ([GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__if__if__cmp__typeconv__length_ref]
                                                                 [vc:annotation]
                                                                 [GP_Reason:VC_RANGE_CHECK]
                                                                 [GP_Sloc:main.adb:152:31]
                                                                 [GP_Id:24]
                                                                 [comment:                     if TokStr'Length <= VariableStore.Max_Variable_Length then                               ^ main.adb:152:31:VC_RANGE_CHECK] (
                                                                 Standard__integer.range_check_
                                                                   abstract
                                                                   ensures
                                                                   { True } begin 
                                                                    (let _ =
                                                                   (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))
                                                                   in ())  end;
                                                                   (_gnatprove_standard.Integer.length
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last)))))
                                                                   <= 1024)));
                                                                ([branch_id=1315] _gnatprove_standard.Main.spark__branch).bool__content
                                                                then
                                                                ();
                                                                ([GP_Sloc:main.adb:153:25] 
                                                                ([sloc:main.adb:153] ()));
                                                                ([GP_Sloc:main.adb:153:58] 
                                                                ([sloc:main.adb:153] ()));
                                                                ([GP_Sloc:main.adb:153:45] 
                                                                ([sloc:main.adb:153] ()));
                                                                ([GP_Sloc:main.adb:153:29] 
                                                                ([sloc:main.adb:153] (let ([mlw:proxy_symbol]
                                                                [introduced] temp___537)
                                                                =
                                                                ( ([sloc:main.adb:153] 
                                                                  ([GP_Reason:VC_PRECONDITION]
                                                                  [vc:annotation]
                                                                  [comment:                        VAR := VariableStore.From_String(TokStr);                                             ^ main.adb:153:45:VC_PRECONDITION]
                                                                  [GP_Id:23]
                                                                  [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__if__if__var_assign__call_from_string]
                                                                  [GP_Sloc:main.adb:153:45] (
                                                                  Variablestore__from_string___axiom.from_string
                                                                    (
                                                                    Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))))))
                                                                in (
                                                                Main__var.var__split_fields
                                                                :=
                                                                ([mlw:proxy_symbol]
                                                                  [introduced] temp___537).Variablestore__variable.__split_fields))))
                                                                 else
                                                                raise Temp___exception_540)));
                                                                ([GP_Sloc:main.adb:160:37] 
                                                                ([sloc:main.adb:160] ()));
                                                                ([GP_Sloc:main.adb:160:50] 
                                                                ([sloc:main.adb:160] ()));
                                                                ([GP_Sloc:main.adb:160:30] 
                                                                ([sloc:main.adb:160] ()));
                                                                ([GP_Sloc:main.adb:160:22] 
                                                                ([sloc:main.adb:160] 
                                                                (if
                                                                ([sloc:main.adb:160] ([branch_id=1334]
                                                                _gnatprove_standard.Main.spark__branch
                                                                :=
                                                                (Main__lines__equal___axiom.equal
                                                                   ( --pp_record_aggregate NOT IMPLEMENTED)
                                                                   ( 
                                                                   ([sloc:main.adb:160] 
                                                                   ([GP_Reason:VC_PRECONDITION]
                                                                   [vc:annotation]
                                                                   [comment:                     if Lines.Equal(COMMAND,Lines.From_String("lock")) then                                                  ^ main.adb:160:50:VC_PRECONDITION]
                                                                   [GP_Sloc:main.adb:160:50]
                                                                   [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__if__if__call_equal__call_from_string]
                                                                   [GP_Id:26] (
                                                                   Main__lines__from_string___axiom.from_string
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___550)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_549.temp___String_Literal_549
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___550)
                                                                    1 4)))))))));
                                                                ([branch_id=1334] _gnatprove_standard.Main.spark__branch).bool__content
                                                                then
                                                                ();
                                                                ([GP_Sloc:main.adb:161:28] 
                                                                ([sloc:main.adb:161] ()));
                                                                ([GP_Sloc:main.adb:161:25] 
                                                                ([sloc:main.adb:161] 
                                                                (if
                                                                ([sloc:main.adb:161] ([branch_id=1345]
                                                                _gnatprove_standard.Main.spark__branch
                                                                :=
                                                                (_gnatprove_standard.Boolean.andb
                                                                   (abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))
                                                                    in ())  end;
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))
                                                                    = 4)
                                                                   (let ([mlw:proxy_symbol]
                                                                   [introduced] temp___546)
                                                                   =
                                                                   (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))
                                                                   in
                                                                   (let ([mlw:proxy_symbol]
                                                                   [introduced] temp___545)
                                                                   =
                                                                   ( any  pre
                                                                    {} post
                                                                    {} return
                                                                    int) in
                                                                  (if
                                                                  (_gnatprove_standard.Boolean.andb
                                                                    ((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___546))
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___545))
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___545)
                                                                    <= (
                                                                    Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___546))))
                                                                  then
                                                                  abstract
                                                                  ensures
                                                                  { True } begin 
                                                                   (let _ =
                                                                  (let i =
                                                                    ( (
                                                                    Standard__character__rep.to_rep
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___546))
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___545))))
                                                                    in
                                                                    (
                                                                    _gnatprove_standard.Boolean.andb
                                                                    (i >= 48)
                                                                    (i <= 57)))
                                                                  in ())  end ));
                                                                  ( any  pre
                                                                    {} post
                                                                  {((result
                                                                    = True)
                                                                    <->
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___548)
                                                                    =
                                                                    (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))
                                                                    in
                                                                    --pp_universal_quantif NOT IMPLEMENTED))}
                                                                  return
                                                                  bool)))));
                                                                ([branch_id=1345] _gnatprove_standard.Main.spark__branch).bool__content
                                                                then
                                                                ();
                                                                ([GP_Sloc:main.adb:164:28] 
                                                                ([sloc:main.adb:164] ()));
                                                                ([GP_Sloc:main.adb:164:57] 
                                                                ([sloc:main.adb:164] ()));
                                                                ([GP_Sloc:main.adb:164:44] 
                                                                ([sloc:main.adb:164] ()));
                                                                ([GP_Sloc:main.adb:164:38] 
                                                                ([sloc:main.adb:164] (
                                                                Main__enter_pin.enter_pin
                                                                :=
                                                                ([sloc:main.adb:164] 
                                                                ([GP_Reason:VC_PRECONDITION]
                                                                [vc:annotation]
                                                                [GP_Sloc:main.adb:164:44]
                                                                [GP_Shape:L_1_while__L_6_while__B_7_declblk__L_8_while__B_9_declblk__if__if__if__enter_pin_assign__call_from_string]
                                                                [GP_Id:25]
                                                                [comment:                           ENTER_PIN := PIN.From_String(TokStr);                                            ^ main.adb:164:44:VC_PRECONDITION] (
                                                                Pin__from_string___axiom.from_string
                                                                  (Standard__string.of_array
                                                                    !Main__B_7__B_9__tokstr.tokstr
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Main__B_7__B_9__tokstr.tokstr__last))))))))
                                                                 else
                                                                raise Temp___exception_544)))
                                                                 else 
                                                                ())))  else
                                                                ())));
                                                              (* Check for the exit condition and loop statements appearing before the loop invariant of loop main.adb:139 *);
                                                              (if
                                                              (!Main__B_7__L_8__i.i
                                                                 = ([mlw:proxy_symbol]
                                                                 [introduced] temp___532))
                                                              then
                                                              raise Main__B_7__L_8.L_8
                                                              );
                                                              ([sloc:main.adb:139] (
                                                              Main__B_7__L_8__i.i
                                                              :=
                                                              (!Main__B_7__L_8__i.i
                                                                 + 1)))
                                                               end loop))) with
                                                          | Temp___exception_544 
                                                          ->
                                                          ();
                                                          ([GP_Sloc:main.adb:166:28] 
                                                          ([sloc:main.adb:166] ()));
                                                          ([GP_Sloc:main.adb:166:28] 
                                                          ([sloc:main.adb:166] (
                                                           any
                                                            --pp_effects NOT IMPLEMENTED
                                                            pre {}
                                                          post {} return
                                                          unit);
                                                          (Ada___ada__text_io__put__4___axiom.put
                                                             (let ([mlw:proxy_symbol]
                                                             [introduced] temp___543)
                                                             =
                                                             ( (Temp___String_Literal_542.temp___String_Literal_542
                                                                  ())) in
                                                             (Standard__string.of_array
                                                                ([mlw:proxy_symbol]
                                                                [introduced] temp___543)
                                                                1 64)));
                                                          ()));
                                                          ([GP_Sloc:main.adb:167:28] 
                                                          ([sloc:main.adb:167] raise Return__exc))
                                                          | Temp___exception_540 
                                                          ->
                                                          ();
                                                          ([GP_Sloc:main.adb:155:25] 
                                                          ([sloc:main.adb:155] ()));
                                                          ([GP_Sloc:main.adb:155:25] 
                                                          ([sloc:main.adb:155] (
                                                           any
                                                            --pp_effects NOT IMPLEMENTED
                                                            pre {}
                                                          post {} return
                                                          unit);
                                                          (Ada___ada__text_io__put__4___axiom.put
                                                             (let ([mlw:proxy_symbol]
                                                             [introduced] temp___539)
                                                             =
                                                             ( (Temp___String_Literal_538.temp___String_Literal_538
                                                                  ())) in
                                                             (Standard__string.of_array
                                                                ([mlw:proxy_symbol]
                                                                [introduced] temp___539)
                                                                1 60)));
                                                          ()));
                                                          ([GP_Sloc:main.adb:156:25] 
                                                          ([sloc:main.adb:156] raise Return__exc))) with
                               | Main__B_7__L_8.L_8  -> ()) )))));
                           ([GP_Sloc:main.adb:176:65] ([sloc:main.adb:176] ()));
                           ([GP_Sloc:main.adb:176:25] ([sloc:main.adb:176] ()));
                           ([GP_Sloc:main.adb:176:38] ([sloc:main.adb:176] ()));
                           ([GP_Sloc:main.adb:176:18] ([sloc:main.adb:176] ()));
                           ([GP_Sloc:main.adb:176:10] ([sloc:main.adb:176] 
                                                      (if
                                                      ([sloc:main.adb:176] ([branch_id=1377]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:176] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [GP_Id:47]
                                                              [vc:annotation]
                                                              [comment:         if Lines.Equal(COMMAND,Lines.From_String("lock")) and (IsLocked = False) then                                      ^ main.adb:176:38:VC_PRECONDITION]
                                                              [GP_Sloc:main.adb:176:38] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___599)
                                                                =
                                                                ( (Temp___String_Literal_598.temp___String_Literal_598
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___599)
                                                                   1 4)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1377] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:177:13] 
                                                      ([sloc:main.adb:177] ()));
                                                      ([GP_Sloc:main.adb:177:27] 
                                                      ([sloc:main.adb:177] ()));
                                                      ([GP_Sloc:main.adb:177:24] 
                                                      ([sloc:main.adb:177] (
                                                      Main__master_pin.master_pin
                                                      :=
                                                      !Main__enter_pin.enter_pin)));
                                                      ([GP_Sloc:main.adb:178:13] 
                                                      ([sloc:main.adb:178] ()));
                                                      ([GP_Sloc:main.adb:178:22] 
                                                      ([sloc:main.adb:178] (
                                                      Main__islocked.islocked
                                                      :=
                                                      (_gnatprove_standard.Boolean.of_int
                                                         1))))
                                                       else
                                                      ([GP_Sloc:main.adb:179:10] 
                                                      (if
                                                      ([sloc:main.adb:179] ([branch_id=1399]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:179] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [GP_Id:46]
                                                              [vc:annotation]
                                                              [GP_Sloc:main.adb:179:41]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("+")) and (IsLocked = False) then                                         ^ main.adb:179:41:VC_PRECONDITION] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___597)
                                                                =
                                                                ( (Temp___String_Literal_596.temp___String_Literal_596
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___597)
                                                                   1 1)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1399] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:180:34] 
                                                      ([sloc:main.adb:180] ()));
                                                      ([GP_Sloc:main.adb:180:28] 
                                                      ([sloc:main.adb:180] ()));
                                                      ([GP_Sloc:main.adb:180:13] 
                                                      ([sloc:main.adb:180] 
                                                      (if
                                                      ([sloc:main.adb:180] ([branch_id=1413]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      ((Operations__operandstack__size___axiom.size
                                                          ( --pp_record_aggregate NOT IMPLEMENTED))
                                                         >= 2)));
                                                      ([branch_id=1413] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:181:32] 
                                                      ([sloc:main.adb:181] ()));
                                                      ([GP_Sloc:main.adb:181:41] 
                                                      ([sloc:main.adb:181] ()));
                                                      ([GP_Sloc:main.adb:181:26] 
                                                      ([sloc:main.adb:181] ()));
                                                      ([GP_Sloc:main.adb:181:26] 
                                                      ([sloc:main.adb:181] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_593)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:181] 
                                                      ([GP_Shape:L_1_while__L_6_while__if__if__call_plus]
                                                      [GP_Reason:VC_PRECONDITION]
                                                      [GP_Id:45]
                                                      [vc:annotation]
                                                      [comment:               Operations.Plus(OpStack, IsLocked);                          ^ main.adb:181:26:VC_PRECONDITION]
                                                      [GP_Sloc:main.adb:181:26] (
                                                      Operations__plus___axiom.plus
                                                        Main__opstack.opstack__split_fields
                                                        !Main__islocked.islocked)));
                                                      ())))  else
                                                      ();
                                                      ([GP_Sloc:main.adb:183:16] 
                                                      ([sloc:main.adb:183] ()));
                                                      ([GP_Sloc:main.adb:183:16] 
                                                      ([sloc:main.adb:183] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put__4___axiom.put
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___595)
                                                         =
                                                         ( (Temp___String_Literal_594.temp___String_Literal_594
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___595)
                                                            1 65)));
                                                      ())))))  else
                                                      ([GP_Sloc:main.adb:185:10] 
                                                      (if
                                                      ([sloc:main.adb:185] ([branch_id=1431]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:185] 
                                                              ([comment:         elsif Lines.Equal(COMMAND,Lines.From_String("-")) and (IsLocked = False) then                                         ^ main.adb:185:41:VC_PRECONDITION]
                                                              [GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [GP_Id:44]
                                                              [vc:annotation]
                                                              [GP_Sloc:main.adb:185:41] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___592)
                                                                =
                                                                ( (Temp___String_Literal_591.temp___String_Literal_591
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___592)
                                                                   1 1)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1431] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:186:34] 
                                                      ([sloc:main.adb:186] ()));
                                                      ([GP_Sloc:main.adb:186:28] 
                                                      ([sloc:main.adb:186] ()));
                                                      ([GP_Sloc:main.adb:186:13] 
                                                      ([sloc:main.adb:186] 
                                                      (if
                                                      ([sloc:main.adb:186] ([branch_id=1445]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      ((Operations__operandstack__size___axiom.size
                                                          ( --pp_record_aggregate NOT IMPLEMENTED))
                                                         >= 2)));
                                                      ([branch_id=1445] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:187:33] 
                                                      ([sloc:main.adb:187] ()));
                                                      ([GP_Sloc:main.adb:187:42] 
                                                      ([sloc:main.adb:187] ()));
                                                      ([GP_Sloc:main.adb:187:26] 
                                                      ([sloc:main.adb:187] ()));
                                                      ([GP_Sloc:main.adb:187:26] 
                                                      ([sloc:main.adb:187] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_588)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:187] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [GP_Id:43]
                                                      [GP_Sloc:main.adb:187:26]
                                                      [vc:annotation]
                                                      [comment:               Operations.Minus(OpStack, IsLocked);                          ^ main.adb:187:26:VC_PRECONDITION]
                                                      [GP_Shape:L_1_while__L_6_while__if__if__call_minus] (
                                                      Operations__minus___axiom.minus
                                                        Main__opstack.opstack__split_fields
                                                        !Main__islocked.islocked)));
                                                      ())))  else
                                                      ();
                                                      ([GP_Sloc:main.adb:189:16] 
                                                      ([sloc:main.adb:189] ()));
                                                      ([GP_Sloc:main.adb:189:16] 
                                                      ([sloc:main.adb:189] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put__4___axiom.put
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___590)
                                                         =
                                                         ( (Temp___String_Literal_589.temp___String_Literal_589
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___590)
                                                            1 65)));
                                                      ())))))  else
                                                      ([GP_Sloc:main.adb:191:10] 
                                                      (if
                                                      ([sloc:main.adb:191] ([branch_id=1463]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:191] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [GP_Id:42]
                                                              [GP_Sloc:main.adb:191:41]
                                                              [vc:annotation]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("*")) and (IsLocked = False) then                                         ^ main.adb:191:41:VC_PRECONDITION] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___587)
                                                                =
                                                                ( (Temp___String_Literal_586.temp___String_Literal_586
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___587)
                                                                   1 1)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1463] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:192:34] 
                                                      ([sloc:main.adb:192] ()));
                                                      ([GP_Sloc:main.adb:192:28] 
                                                      ([sloc:main.adb:192] ()));
                                                      ([GP_Sloc:main.adb:192:13] 
                                                      ([sloc:main.adb:192] 
                                                      (if
                                                      ([sloc:main.adb:192] ([branch_id=1477]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      ((Operations__operandstack__size___axiom.size
                                                          ( --pp_record_aggregate NOT IMPLEMENTED))
                                                         >= 2)));
                                                      ([branch_id=1477] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:193:36] 
                                                      ([sloc:main.adb:193] ()));
                                                      ([GP_Sloc:main.adb:193:45] 
                                                      ([sloc:main.adb:193] ()));
                                                      ([GP_Sloc:main.adb:193:26] 
                                                      ([sloc:main.adb:193] ()));
                                                      ([GP_Sloc:main.adb:193:26] 
                                                      ([sloc:main.adb:193] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_583)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:193] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [comment:               Operations.Multiply(OpStack, IsLocked);                          ^ main.adb:193:26:VC_PRECONDITION]
                                                      [GP_Id:41]
                                                      [vc:annotation]
                                                      [GP_Sloc:main.adb:193:26]
                                                      [GP_Shape:L_1_while__L_6_while__if__if__call_multiply] (
                                                      Operations__multiply___axiom.multiply
                                                        Main__opstack.opstack__split_fields
                                                        !Main__islocked.islocked)));
                                                      ())))  else
                                                      ();
                                                      ([GP_Sloc:main.adb:195:16] 
                                                      ([sloc:main.adb:195] ()));
                                                      ([GP_Sloc:main.adb:195:16] 
                                                      ([sloc:main.adb:195] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put__4___axiom.put
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___585)
                                                         =
                                                         ( (Temp___String_Literal_584.temp___String_Literal_584
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___585)
                                                            1 65)));
                                                      ())))))  else
                                                      ([GP_Sloc:main.adb:197:10] 
                                                      (if
                                                      ([sloc:main.adb:197] ([branch_id=1495]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:197] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Id:40]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [vc:annotation]
                                                              [GP_Sloc:main.adb:197:41]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("/")) and (IsLocked = False) then                                         ^ main.adb:197:41:VC_PRECONDITION] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___582)
                                                                =
                                                                ( (Temp___String_Literal_581.temp___String_Literal_581
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___582)
                                                                   1 1)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1495] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:198:34] 
                                                      ([sloc:main.adb:198] ()));
                                                      ([GP_Sloc:main.adb:198:28] 
                                                      ([sloc:main.adb:198] ()));
                                                      ([GP_Sloc:main.adb:198:13] 
                                                      ([sloc:main.adb:198] 
                                                      (if
                                                      ([sloc:main.adb:198] ([branch_id=1509]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      ((Operations__operandstack__size___axiom.size
                                                          ( --pp_record_aggregate NOT IMPLEMENTED))
                                                         >= 2)));
                                                      ([branch_id=1509] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:199:34] 
                                                      ([sloc:main.adb:199] ()));
                                                      ([GP_Sloc:main.adb:199:43] 
                                                      ([sloc:main.adb:199] ()));
                                                      ([GP_Sloc:main.adb:199:26] 
                                                      ([sloc:main.adb:199] ()));
                                                      ([GP_Sloc:main.adb:199:26] 
                                                      ([sloc:main.adb:199] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_578)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:199] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [GP_Sloc:main.adb:199:26]
                                                      [vc:annotation]
                                                      [comment:               Operations.Divide(OpStack, IsLocked);                          ^ main.adb:199:26:VC_PRECONDITION]
                                                      [GP_Id:39]
                                                      [GP_Shape:L_1_while__L_6_while__if__if__call_divide] (
                                                      Operations__divide___axiom.divide
                                                        Main__opstack.opstack__split_fields
                                                        !Main__islocked.islocked)));
                                                      ())))  else
                                                      ();
                                                      ([GP_Sloc:main.adb:201:16] 
                                                      ([sloc:main.adb:201] ()));
                                                      ([GP_Sloc:main.adb:201:16] 
                                                      ([sloc:main.adb:201] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put__4___axiom.put
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___580)
                                                         =
                                                         ( (Temp___String_Literal_579.temp___String_Literal_579
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___580)
                                                            1 65)));
                                                      ())))))  else
                                                      ([GP_Sloc:main.adb:203:10] 
                                                      (if
                                                      ([sloc:main.adb:203] ([branch_id=1527]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:203] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [vc:annotation]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("push")) and (IsLocked = False) then                                         ^ main.adb:203:41:VC_PRECONDITION]
                                                              [GP_Id:38]
                                                              [GP_Sloc:main.adb:203:41] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___577)
                                                                =
                                                                ( (Temp___String_Literal_576.temp___String_Literal_576
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___577)
                                                                   1 4)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1527] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:204:42] 
                                                      ([sloc:main.adb:204] ()));
                                                      ([GP_Sloc:main.adb:204:51] 
                                                      ([sloc:main.adb:204] ()));
                                                      ([GP_Sloc:main.adb:204:59] 
                                                      ([sloc:main.adb:204] ()));
                                                      ([GP_Sloc:main.adb:204:26] 
                                                      ([sloc:main.adb:204] ()));
                                                      ([GP_Sloc:main.adb:204:26] 
                                                      ([sloc:main.adb:204] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_575)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:204] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [comment:               Operations.Push_Operation(OpStack, NUMBER, IsLocked);                          ^ main.adb:204:26:VC_PRECONDITION]
                                                      [vc:annotation]
                                                      [GP_Shape:L_1_while__L_6_while__if__call_push_operation]
                                                      [GP_Id:37]
                                                      [GP_Sloc:main.adb:204:26] (
                                                      Operations__push_operation___axiom.push_operation
                                                        Main__opstack.opstack__split_fields
                                                        !Main__number.number
                                                        !Main__islocked.islocked)));
                                                      ())))  else
                                                      ([GP_Sloc:main.adb:205:10] 
                                                      (if
                                                      ([sloc:main.adb:205] ([branch_id=1549]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:205] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [vc:annotation]
                                                              [GP_Id:36]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("pop")) and (IsLocked = False) then                                         ^ main.adb:205:41:VC_PRECONDITION]
                                                              [GP_Sloc:main.adb:205:41] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___574)
                                                                =
                                                                ( (Temp___String_Literal_573.temp___String_Literal_573
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___574)
                                                                   1 3)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1549] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:206:40] 
                                                      ([sloc:main.adb:206] ()));
                                                      ([GP_Sloc:main.adb:206:49] 
                                                      ([sloc:main.adb:206] ()));
                                                      ([GP_Sloc:main.adb:206:57] 
                                                      ([sloc:main.adb:206] ()));
                                                      ([GP_Sloc:main.adb:206:25] 
                                                      ([sloc:main.adb:206] ()));
                                                      ([GP_Sloc:main.adb:206:25] 
                                                      ([sloc:main.adb:206] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_571)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_572)
                                                      = !Main__number.number
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:206] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [GP_Shape:L_1_while__L_6_while__if__call_pop_operation]
                                                      [vc:annotation]
                                                      [comment:              Operations.Pop_Operation(OpStack, NUMBER, IsLocked); -- although the pop in commandline does not need argument, we store the value into the NUMBER                         ^ main.adb:206:25:VC_PRECONDITION]
                                                      [GP_Id:35]
                                                      [GP_Sloc:main.adb:206:25] (
                                                      Operations__pop_operation___axiom.pop_operation
                                                        Main__opstack.opstack__split_fields
                                                        Main__number.number
                                                        !Main__islocked.islocked)));
                                                      ()))))  else
                                                      ([GP_Sloc:main.adb:207:10] 
                                                      (if
                                                      ([sloc:main.adb:207] ([branch_id=1571]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:207] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [vc:annotation]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("load")) and (IsLocked = False) then                                         ^ main.adb:207:41:VC_PRECONDITION]
                                                              [GP_Id:34]
                                                              [GP_Sloc:main.adb:207:41] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___570)
                                                                =
                                                                ( (Temp___String_Literal_569.temp___String_Literal_569
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___570)
                                                                   1 4)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1571] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:208:31] 
                                                      ([sloc:main.adb:208] ()));
                                                      ([GP_Sloc:main.adb:208:36] 
                                                      ([sloc:main.adb:208] ()));
                                                      ([GP_Sloc:main.adb:208:40] 
                                                      ([sloc:main.adb:208] ()));
                                                      ([GP_Sloc:main.adb:208:49] 
                                                      ([sloc:main.adb:208] ()));
                                                      ([GP_Sloc:main.adb:208:25] 
                                                      ([sloc:main.adb:208] ()));
                                                      ([GP_Sloc:main.adb:208:25] 
                                                      ([sloc:main.adb:208] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_568)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:208] 
                                                      ([comment:              Operations.Load(VAR, DB, OpStack, IsLocked);                         ^ main.adb:208:25:VC_PRECONDITION]
                                                      [GP_Reason:VC_PRECONDITION]
                                                      [vc:annotation]
                                                      [GP_Id:33]
                                                      [GP_Sloc:main.adb:208:25]
                                                      [GP_Shape:L_1_while__L_6_while__if__call_load] (
                                                      Operations__load___axiom.load
                                                        ( --pp_record_aggregate NOT IMPLEMENTED)
                                                        ( !Main__db.db)
                                                        Main__opstack.opstack__split_fields
                                                        !Main__islocked.islocked)));
                                                      ())))  else
                                                      ([GP_Sloc:main.adb:209:10] 
                                                      (if
                                                      ([sloc:main.adb:209] ([branch_id=1594]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:209] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("store")) and (IsLocked = False) then                                         ^ main.adb:209:41:VC_PRECONDITION]
                                                              [GP_Sloc:main.adb:209:41]
                                                              [vc:annotation]
                                                              [GP_Id:32] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___567)
                                                                =
                                                                ( (Temp___String_Literal_566.temp___String_Literal_566
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___567)
                                                                   1 5)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1594] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:210:32] 
                                                      ([sloc:main.adb:210] ()));
                                                      ([GP_Sloc:main.adb:210:37] 
                                                      ([sloc:main.adb:210] ()));
                                                      ([GP_Sloc:main.adb:210:41] 
                                                      ([sloc:main.adb:210] ()));
                                                      ([GP_Sloc:main.adb:210:50] 
                                                      ([sloc:main.adb:210] ()));
                                                      ([GP_Sloc:main.adb:210:25] 
                                                      ([sloc:main.adb:210] ()));
                                                      ([GP_Sloc:main.adb:210:25] 
                                                      ([sloc:main.adb:210] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_563)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_564)
                                                      = ( !Main__db.db) in
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_565)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:210] 
                                                      ([GP_Shape:L_1_while__L_6_while__if__call_store]
                                                      [GP_Reason:VC_PRECONDITION]
                                                      [vc:annotation]
                                                      [GP_Id:31]
                                                      [GP_Sloc:main.adb:210:25]
                                                      [comment:              Operations.Store(VAR, DB, OpStack, IsLocked);                         ^ main.adb:210:25:VC_PRECONDITION] (
                                                      Operations__store___axiom.store
                                                        Main__var.var__split_fields
                                                        Main__db.db
                                                        Main__opstack.opstack__split_fields
                                                        !Main__islocked.islocked)));
                                                      ())))))  else
                                                      ([GP_Sloc:main.adb:211:10] 
                                                      (if
                                                      ([sloc:main.adb:211] ([branch_id=1617]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:211] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [GP_Sloc:main.adb:211:41]
                                                              [vc:annotation]
                                                              [GP_Id:30]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("remove")) and (IsLocked = False) then                                         ^ main.adb:211:41:VC_PRECONDITION] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___562)
                                                                =
                                                                ( (Temp___String_Literal_561.temp___String_Literal_561
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___562)
                                                                   1 6)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1617] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:212:33] 
                                                      ([sloc:main.adb:212] ()));
                                                      ([GP_Sloc:main.adb:212:38] 
                                                      ([sloc:main.adb:212] ()));
                                                      ([GP_Sloc:main.adb:212:42] 
                                                      ([sloc:main.adb:212] ()));
                                                      ([GP_Sloc:main.adb:212:25] 
                                                      ([sloc:main.adb:212] ()));
                                                      ([GP_Sloc:main.adb:212:25] 
                                                      ([sloc:main.adb:212] (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_559)
                                                      =
                                                      ( --pp_record_aggregate NOT IMPLEMENTED)
                                                      in
                                                      (let ([mlw:proxy_symbol]
                                                      [introduced] temp___compl_560)
                                                      = ( !Main__db.db) in
                                                      ( any
                                                         --pp_effects NOT IMPLEMENTED
                                                         pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:212] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [GP_Sloc:main.adb:212:25]
                                                      [vc:annotation]
                                                      [GP_Shape:L_1_while__L_6_while__if__call_remove]
                                                      [comment:              Operations.Remove(VAR, DB, IsLocked);                         ^ main.adb:212:25:VC_PRECONDITION]
                                                      [GP_Id:29] (Operations__remove___axiom.remove
                                                                    Main__var.var__split_fields
                                                                    Main__db.db
                                                                    !Main__islocked.islocked)));
                                                      ()))))  else
                                                      ([GP_Sloc:main.adb:213:10] 
                                                      (if
                                                      ([sloc:main.adb:213] ([branch_id=1639]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      (_gnatprove_standard.Boolean.andb
                                                         (Main__lines__equal___axiom.equal
                                                            ( --pp_record_aggregate NOT IMPLEMENTED)
                                                            ( ([sloc:main.adb:213] 
                                                              ([GP_Reason:VC_PRECONDITION]
                                                              [GP_Shape:L_1_while__L_6_while__if__and__call_equal__call_from_string]
                                                              [comment:         elsif Lines.Equal(COMMAND,Lines.From_String("list")) and (IsLocked = False) then                                         ^ main.adb:213:41:VC_PRECONDITION]
                                                              [vc:annotation]
                                                              [GP_Id:28]
                                                              [GP_Sloc:main.adb:213:41] (
                                                              Main__lines__from_string___axiom.from_string
                                                                (let ([mlw:proxy_symbol]
                                                                [introduced] temp___558)
                                                                =
                                                                ( (Temp___String_Literal_557.temp___String_Literal_557
                                                                    ())) in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___558)
                                                                   1 4)))))))
                                                         ((_gnatprove_standard.Boolean.to_int
                                                             !Main__islocked.islocked)
                                                            = (_gnatprove_standard.Boolean.to_int
                                                                 (_gnatprove_standard.Boolean.of_int
                                                                    0))))));
                                                      ([branch_id=1639] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:main.adb:214:31] 
                                                      ([sloc:main.adb:214] ()));
                                                      ([GP_Sloc:main.adb:214:35] 
                                                      ([sloc:main.adb:214] ()));
                                                      ([GP_Sloc:main.adb:214:25] 
                                                      ([sloc:main.adb:214] ()));
                                                      ([GP_Sloc:main.adb:214:25] 
                                                      ([sloc:main.adb:214] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      ([sloc:main.adb:214] 
                                                      ([GP_Reason:VC_PRECONDITION]
                                                      [GP_Sloc:main.adb:214:25]
                                                      [GP_Shape:L_1_while__L_6_while__if__call_list]
                                                      [vc:annotation]
                                                      [comment:              Operations.List(DB, IsLocked);                         ^ main.adb:214:25:VC_PRECONDITION]
                                                      [GP_Id:27] (Operations__list___axiom.list
                                                                    ( !Main__db.db)
                                                                    !Main__islocked.islocked)));
                                                      ()))  else
                                                      ();
                                                      ([GP_Sloc:main.adb:216:13] 
                                                      ([sloc:main.adb:216] ()));
                                                      ([GP_Sloc:main.adb:216:13] 
                                                      ([sloc:main.adb:216] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put_line__2___axiom.put_line
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___556)
                                                         =
                                                         ( (Temp___String_Literal_555.temp___String_Literal_555
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___556)
                                                            1 60)));
                                                      ())))))))))))))))))))))))));
(* Check for the exit condition and loop statements appearing before the loop invariant of loop main.adb:120 *);
(if --pp_not NOT IMPLEMENTED then raise Main__L_6.L_6 )
 end loop)))))) with
| Temp___exception_530  ->
();
([GP_Sloc:main.adb:134:16] ([sloc:main.adb:134] ()));
([GP_Sloc:main.adb:134:16] ([sloc:main.adb:134] ( any
                                                   --pp_effects NOT IMPLEMENTED
                                                   pre {}
                           post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___529) =
   ( (Temp___String_Literal_528.temp___String_Literal_528 ())) in
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___529) 1
      48)));
()));
([GP_Sloc:main.adb:135:16] ([sloc:main.adb:135] raise Return__exc))) with
| Main__L_6.L_6  -> ())
)));
(* Check for the exit condition and loop statements appearing before the loop invariant of loop main.adb:63 *);
(if --pp_not NOT IMPLEMENTED then raise Main__L_1.L_1 )
 end loop))))))) with | Main__L_1.L_1  -> ()) )));
raise Return__exc with | Return__exc  -> ());
abstract ensures
{ True } begin  (let _ = True in ())  end

end
